-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 7316 characters
local function Decode(str)
	local StringLength = #str
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end
local Objects = Decode('AEAbASEFTW9kZWwhBE5hbWUhB1R5cGUgMjAhCldvcmxkUGl2b3QEDAENAQ4BIQhNZXNoUGFydCEHUmVsZWFzZSEIQW5jaG9yZWQiIQpCcmlja0NvbG9yB2wBIQZDRnJhbWUEFQANAQ4BIQpDYW5Db2xsaWRlAiEFQ29sb3IGS0tLIQhNYXRlcmlhbAMAAAAAAABxQCEI'
..'UG9zaXRpb24KXTGiwltWeT8FhnlCIQRTaXplCkH+kD7W1M897VRsPiEGTWVzaElkIRdyYnhhc3NldGlkOi8vNzQ5MDAyMDIxNCEITWVzaFNpemUKnhoYQSAGWkAJ7PdAIQNNYWcHlAAEIgAPAQ4BBlBQUCELT3JpZW50YXRpb24KAAAAAAAAtMIAAAAACrXJocK3HhU/'
..'rX95QiEIUm90YXRpb24K6SYxPrgelT8nMQg/IRdyYnhhc3NldGlkOi8vMTM2NDY0MTU3MwqDiNQ8DY4yPsxGpz0hBFBhcnQhB0FpbVBhcnQhC0JhY2tTdXJmYWNlAwAAAAAAACRAIQ1Cb3R0b21TdXJmYWNlBxoABDEAEAERAQYbKjUhDEZyb250U3VyZmFjZSELTGVm'
..'dFN1cmZhY2UKRTilws6j0D8FgnlCIQxSaWdodFN1cmZhY2UKzczMPc3MzD3NzMw9IQpUb3BTdXJmYWNlIQxUcmFuc3BhcmVuY3kDAAAAAAAA8D8hCkF0dGFjaG1lbnQhBU5WQWltBDsAEgETAQoAAACAAAAAgAAANMIKzcxMPs3MTD4AAAAAIQtGbGFzaCBIaWRlcgdp'
..'AQRAAA0BDgEGPDw8Cun5nMJQqZg/ZYB5Qgp1qQM/TPAJPsoZGj4hF3JieGFzc2V0aWQ6Ly83NDkwMDM0NDc4CnQeikEYtJBAgKihQCEJSGFuZGd1YXJkBEYADQEOAQrdv5/CVFWgP51feUIKC925P6a0yT52IZY+IRdyYnhhc3NldGlkOi8vNzQ4OTk3NjI0NAqG+kJC'
..'CJlTQVR+HUEESwANAQ4BCmUHn8IQc7s/ZYB5Qgr9z0A+A1fHPd9zQT4hF3JieGFzc2V0aWQ6Ly83NDkwMTQ2NTk0CrhEykCwHVFAovDKQCEFU2lnaHQEVAAOARQBCgAAAAAAAAAAAAC0QiELUGl2b3RPZmZzZXQEFQENAQ4BCv3nnsLwt8c/VYB5QgoJzVw+J8aKPTsa'
..'HT4hF3JieGFzc2V0aWQ6Ly83NDkwMTUxMDYxCiih50BwlBFAoM6kQARZAA0BDgEKyUujwhBzuz9lgHlCCrDPQD4DV8c94HNBPiEXcmJ4YXNzZXRpZDovLzc0OTAxNDM3NjgKaETKQLAdUUCk8MpABGAAFgENAQoAAAAAAAAAAAAAtMIEFwENAQ4BCk1ro8K+Q8c/MYl5'
..'QgoFzVw+7K2dPdJpLz4hF3JieGFzc2V0aWQ6Ly83NDkwMTQ5ODkwCiSh50CQaSVAGgS4QCEHQnVsbGV0cwdaAQRoAA0BDgEG076WCingocLknYU//YB5QgrQ/74+jMRoPq6qCz4hF3JieGFzc2V0aWQ6Ly83NDkwMTczMDY0CsddSEHoLvRALISSQCEFQ2F0Y2gEbgAN'
..'AQ4BCklUosLQH5A/eQx5Qgqwg5A9HVxRPjgI9D0hF3JieGFzc2V0aWQ6Ly83NDkwMDI0ODMyCguaF0CYoNtAAACAQCEHVHJpZ2dlcgR0AA0BDgEKeceiwpdMUT9lgHlCCt4Y5D0TQjI+b+U/PSEXcmJ4YXNzZXRpZDovLzc0OTAwMjk5MjEKmEhvQBQAu0CoTsk/IQZT'
..'d2l0Y2gEegANAQ4BCpE1o8LO34Y/ZYB5QgpeRSg+NsyoPfL+gD4hF3JieGFzc2V0aWQ6Ly83NDkwMDI5MzMzCvyFsEBwEzFAeFIHQSEFVXBwZXIEgAANAQ4BCqE6osLke6A/TqF5Qgo9Nsw/MknKPtVglT4hF3JieGFzc2V0aWQ6Ly83NDkwMDg5MTY3ChY6VkLcNFRB'
..'QbQcQSEFTG93ZXIEhgANAQ4BCllLo8L2q4Y/ZYB5Qgr3Kv4/9dU6P0kanz4hF3JieGFzc2V0aWQ6Ly83NDg5OTk5ODcyCgBRhUKm/8NByucmQSEEQm9sdASMAA0BDgEKjZKhwtJtoz/NJXlCCva8dj/vMZI+OROuPiEXcmJ4YXNzZXRpZDovLzc0ODk5OTY2MzcKXGsB'
..'QmRdGUG1nDZBIQVTb3VuZCELQm9sdEZvcndhcmQhElJvbGxPZmZNYXhEaXN0YW5jZQMAAAAAAABZQCESUm9sbE9mZk1pbkRpc3RhbmNlAwAAAAAAABRAIQdTb3VuZElkIRZyYnhhc3NldGlkOi8vMzkzNjc4OTI2IQZWb2x1bWUhCEJvbHRCYWNrIRZyYnhhc3NldGlk'
..'Oi8vMzkzNjc4OTE1IQZCYXJyZWwEnQANAQ4BCk18n8IGnp0/ZYB5QgoMXv8/De+mPq9ACj4hF3JieGFzc2V0aWQ6Ly83NDkwMDMxMjQzChLyhULgHi9BbAiRQCEFUmFpbHMEowANAQ4BCukMoMK++JI/ZYB5Qgp0EJY/PAOBPlyOlz4hF3JieGFzc2V0aWQ6Ly83NDg5'
..'OTczMzg2CnxsHUL4VgdBHv0eQSEEUmVzdASqAA0BDgEGLS0tCvWRpMKYwaQ/hYR5Qgq45T4/30ePPlAuYj4hF3JieGFzc2V0aWQ6Ly83NDkwMDA4NTY3CmdCyEG8ThZB+kXtQCEZQkNNIEd1bmZpZ2h0ZXIgTW9kIDMgR3JpcASwAA0BDgEKMWSjwsjnHT9lgHlCCnUy'
..'/D6rOTw/BDNLPiEXcmJ4YXNzZXRpZDovLzc0OTAwMTY4NjcKYEiEQc50xUEmKtVAIQVTdG9jawS2AA0BDgEKcRKlwq5dcj9lgHlCCsh2aj9lWT0/RK6UPiEXcmJ4YXNzZXRpZDovLzc0OTAwMDk0MDIKcPb1QaWixkHu+BtBIQRHcmlwAwAAAAAAAAAABL0AGAEZAQpt'
..'lKLCYWhRP/1/eUIhBEZpcmUhF3JieGFzc2V0aWQ6Ly85MDc0NzI4ODM5IQRNYWcyBMIADwEOAQo1BKLCSebgPml9eUIhC1JlZmxlY3RhbmNlAwAAAKCZmbk/CmY5KD5cj8I+Piq9PSEXcmJ4YXNzZXRpZDovLzEzNjQ2NDI1MTgKBCLEPNzPaT2sMWg8IQlTbW9rZVBh'
..'cnQEygAaARsBCjVgnMIwtJg//X95QiEJU3BvdExpZ2h0IQdGbGFzaEZYIQpCcmlnaHRuZXNzBv/XJSEHRW5hYmxlZCEFQW5nbGUDAAAAAACAZkAhBVJhbmdlIQ9QYXJ0aWNsZUVtaXR0ZXIhDkZsYXNoRlhbRmxhc2hdKAIAAAAA//9+AACAP/9VACERRW1pc3Npb25E'
..'aXJlY3Rpb24hCExpZmV0aW1lEZqZmT2amZk9IQ1MaWdodEVtaXNzaW9uIQxMb2NrZWRUb1BhcnQhBFJhdGUDAAAAAABAj0AhCFJvdFNwZWVkEQAAAAAAALRDKQIAAAAABDzdPgQ83T4AAIA/AAAAAAAAAAAhBVNwZWVkEQAAIEEAACBBIQdUZXh0dXJlISlodHRwOi8v'
..'d3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTI1NzQzMDg3MCkCAAAAAAAAQD8AAAAAAACAPwAAgD8AAAAAIQhPdmVySGVhdCEMQWNjZWxlcmF0aW9uCgAAAAAAAEBAAAAAACgCAAAAAPr6+gAAgD/6+voRAACAPwAAwD8hDkxpZ2h0SW5mbHVlbmNlEQAASMMAAEhDEQAA'
..'AAAAAMhCKQIAAAAAzcxMPgAAAAAAAIA/AAAAAAAAAAARAAAAPwAAAEAhC1NwcmVhZEFuZ2xlCwAAAEAAAABAISxyYnhhc3NldDovL3RleHR1cmVzL3BhcnRpY2xlcy9zbW9rZV9tYWluLmRkcykCAAAAAKRwfT8AAAAAAACAP6RwfT8AAAAAIRNWZWxvY2l0eUluaGVy'
..'aXRhbmNlIQVTbW9rZQoAAAAAAAAAQAAAAAARmpkZP5qZGT8pAgAAAADNzMw+AAAAAAAAgD8AAIA/AAAAABEAAKBAAADgQAsAAMhBAADIQSkCAAAAADMzcz8AAAAAAACAPwAAgD8AAAAAIQhGaXJlUGFydAfxAwT/AA8BDgEG//8ACgx2nMJ8dZk/kHx5QgrMzEw+zMxM'
..'PszMTD4hB0NoYW1iZXIEBAEUAQ4BCgAAAAAAADRDAAAAAAro46HCiIKaP5jneUIKAAA0wwAAAAAAADTDIQlTaWdodE1hcmsECAEPAQ4BCgDunsK44cs/lHp5QiEJQmxvY2tNZXNoIQVTY2FsZQoK1yM8CtcjPAAAekQKlTmhwsWEVT81V3lCCgAAgD8AAAAAAAAAAAoA'
..'AAAAAACAPwAAAAAKAAAAAAAAAAAAAIA/CgAAAAA+BAIcAACAPwoAAAAiAACAPz4EAhwK9AQ1P/QENb8AAAAACvQENT/0BDU/AAAAAAoAAIC/AAAAAAAAAAAKk2advQAAAAAAAAAACgAAAAAAAIC/AAAAAAqQHLs9AAAAAAAAAAAKAAAAJ9jbHZ4AAIA/CgAA+CEAAIA/'
..'2NsdngoAAIAnw7BrngAAgD8KAACOIgAAgD/DsGueKQEAAAIAAgADAAQABQAGAAELAAIABwAIAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsABgABDQACABwACAAJAAoAHQAMAB4ADgAPABAAHwASABMAIAAhABQAIgAjACEAFgAkABgAJQAaACYA'
..'JwABEgACACgACAAJACkAKgArACoACgAsAAwALQAOAA8AEAAuAC8AKgAwACoAEgATACAAIQAUADEAMgAqACMAIQAWADMANAAqADUANgA3AAQEAAIAOAAMADkAIAA6ABQAOwAGAAELAAIAPAAIAAkACgA9AAwAPgAOAA8AEAA/ABIAEwAUAEAAFgBBABgAQgAaAEMABgAB'
..'CwACAEQACAAJAAoAPQAMAEUADgAPABAAPwASABMAFABGABYARwAYAEgAGgBJAAYAAQsAAgAnAAgACQAKAD0ADABKAA4ADwAQAD8AEgATABQASwAWAEwAGABNABoATgAGAAEOAAIATwAIAAkACgA9AAwAUAAOAA8AEAA/ABIAEwAgAFEAUgBTABQAVAAjAFEAFgBVABgA'
..'VgAaAFcABgABCwACACcACAAJAAoAPQAMAFgADgAPABAAPwASABMAFABZABYAWgAYAFsAGgBcAAYAAQ4AAgBPAAgACQAKAD0ADABdAA4ADwAQAD8AEgATACAAXgBSAF8AFABgACMAXgAWAGEAGABiABoAYwAGAAELAAIAZAAIAAkACgBlAAwAZgAOAA8AEABnABIAEwAU'
..'AGgAFgBpABgAagAaAGsABgABCwACAGwACAAJAAoACwAMAG0ADgAPABAAEQASABMAFABuABYAbwAYAHAAGgBxAAYAAQsAAgByAAgACQAKAD0ADABzAA4ADwAQAD8AEgATABQAdAAWAHUAGAB2ABoAdwAGAAELAAIAeAAIAAkACgALAAwAeQAOAA8AEAARABIAEwAUAHoA'
..'FgB7ABgAfAAaAH0ABgABCwACAH4ACAAJAAoAPQAMAH8ADgAPABAAPwASABMAFACAABYAgQAYAIIAGgCDAAYAAQsAAgCEAAgACQAKAD0ADACFAA4ADwAQAD8AEgATABQAhgAWAIcAGACIABoAiQAGAAELAAIAigAIAAkACgALAAwAiwAOAA8AEAARABIAEwAUAIwAFgCN'
..'ABgAjgAaAI8AkAASBQACAJEAkgCTAJQAlQCWAJcAmAA2AJAAEgUAAgCZAJIAkwCUAJUAlgCaAJgANgAGAAELAAIAmwAIAAkACgA9AAwAnAAOAA8AEAA/ABIAEwAUAJ0AFgCeABgAnwAaAKAABgABCwACAKEACAAJAAoAPQAMAKIADgAPABAAPwASABMAFACjABYApAAY'
..'AKUAGgCmAAYAAQsAAgCnAAgACQAKACwADACoAA4ADwAQAKkAEgATABQAqgAWAKsAGACsABoArQAGAAELAAIArgAIAAkACgAsAAwArwAOAA8AEACpABIAEwAUALAAFgCxABgAsgAaALMABgABCwACALQACAAJAAoALAAMALUADgAPABAAqQASABMAFAC2ABYAtwAYALgA'
..'GgC5ACcAAQ0AAgC6AAgACQArALsACgAsAAwAvAAOAA8AEAAuACAAIQAUAL0AIwAhABYAMwA0ALsANQA2AJAAGgIAAgC+AJYAvwAGAAEOAAIAwAAIAAkACgBlAAwAwQAOAA8AEABnABIAEwAgACEAFADCAMMAxAAjACEAFgDFABgAxgAaAMcAJwABDQACAMgACAAJACsA'
..'uwAKACwADADJAA4ADwAQAC4AIAAhABQAygAjACEAFgAzADQAuwA1ADYAywAdBgACAMwAzQCVABAAzgDPAA8A0ADRANIAKgDTAB0OAAIA1AAQANUA1gCVAM8ADwDXANgA2QA2ANoACQDbANwA3QDeACMA3gAWAN8A4ADhAOIA4wA1AOQA0wAdEAACAOUA5gDnABAA6ADW'
..'AJUAzwAPANcA6QDqADYA2wDcAN0A6wAjAOwAFgDtAOAA7gDvAPAA4gDxADUA8gDzAMQA0wAdDwACAPQA5gD1ANYAlQDPAA8A1wD2AOoANgDbANwA3QDrACMA3gAWAPcA4AD4AO8A+QDiAPEANQD6APMAxAAnAAEOAAIA+wAIAAkAKwC7AAoA/AAMAP0ADgAPABAA/gAS'
..'ABMAIAAhABQA/wAjACEAFgAAATQAuwA1ADYAywAiBgACAMwAzQC7ABAAzgDPAA8A0ADRANIAuwDTACIPAAIA1ADmAPUA1gCVAM8ADwDXAPYA6gA2ANsA3ADdAOsAIwDeABYA9wDgAPgA7wD5AOIA8QA1APoA8wDEANMAIhAAAgDlAOYA5wAQAOgA1gCVAM8ADwDXAOkA'
..'6gA2ANsA3ADdAOsAIwDsABYA7QDgAO4A7wDwAOIA8QA1APIA8wDEANMAIg8AAgD0AOYA9QDWAJUAzwAPANcA9gDqADYA2wDcAN0A6wAjAN4AFgD3AOAA+ADvAPkA4gDxADUA+gDzAMQAJwABDgACAAEBCAAJACsAuwAKAPwADAACAQ4ADwAQAP4AEgATACAAAwEUAAQB'
..'IwAFARYAAAE0ALsANQA2ACcAAQ4AAgAGAQgACQArALsACgD8AAwABwEOAA8AEAD+ABIAEwAgACEAFAAIASMAIQAWAAABNAC7ADUANgAJASgBAAoBCwEA')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end
