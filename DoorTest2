-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 8504 characters

local ScriptFunctions = {
function(script,require)
--Made by xImmortalChaos for Site-40.

local Door = script.Parent.Door
local Door2 = script.Parent.Door2
local Button1 = script.Parent.Button1
local Button2 = script.Parent.Button2
local Open = false

local OpenSound = Door.DoorOpen
local CloseSound = Door.DoorClose

local Debounce = false
function Triggered(Player)
	if Debounce == true then return end
	Debounce = true
	CloseSound:Play()
	--Door.Transparency = 0
	for i,v in pairs(Door:GetChildren()) do
		if v:IsA("Decal") then
			v.Transparency = 0
		end
	end
	spawn(function()
		for i = 3,(Door.Size.z / 0.15)  do
			Door.CFrame = Door.CFrame + (Door.CFrame.lookVector * 0.15)

			wait()
		end
	end)

	spawn(function()
		for i = 3,(Door2.Size.z / 0.15) do
			Door2.CFrame = Door2.CFrame + (Door2.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	wait(15)
	OpenSound:Play()
	spawn(function()
		for i = 3,(Door.Size.z / 0.15) do
			Door.CFrame = Door.CFrame - (Door.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	spawn(function()
		for i = 3,(Door2.Size.z / 0.15) do
			Door2.CFrame = Door2.CFrame - (Door2.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	--Door.Transparency = 1
	for i,v in pairs(Door:GetChildren()) do
		if v:IsA("Decal") then
			v.Transparency = 1
		end
	end
	wait(0.4)
	Debounce = false
end
Button1.ProximityPrompt.Triggered:connect(Triggered)
Button2.ProximityPrompt.Triggered:connect(Triggered)

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end


local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEBlASEFTW9kZWwhCldvcmxkUGl2b3QETAFNAU4BIQRQYXJ0IQhBbmNob3JlZCIhDUJvdHRvbVN1cmZhY2UDAAAAAAAAAAAhCkJyaWNrQ29sb3IH6wMhBkNGcmFtZQQSAE8BUAEhBUNvbG9yBhERESEITWF0ZXJpYWwDAAAAAAAAckAhCFBvc2l0aW9uCv4nYsC5i1xA'
..'ULSLwCEEU2l6ZQoF1yM916PAQDFlmD4hClRvcFN1cmZhY2UhBE5hbWUhFExldmVsIERldmVsb3BlciBkb29yBFEBUgFTASEERG9vcgRRAVQBVQEhElNjcmlwdGVkQ29tcG9uZW50cwRWAVcBWAEhBlNjcmlwdCEETWFpbiEOVW5pb25PcGVyYXRpb24hBURvb3IyB8IA'
..'BCkAVwFYASEKQ2FuQ29sbGlkZQIGo6KlAwAAAAAAgIlAIQtPcmllbnRhdGlvbgoAAAAA4fqzQo/C9TwKAeAnwFEzxD8vp6XAIQhSb3RhdGlvbgqPwvU8AAC0QgAAAAAKzcxMPbSzRz8l2Q8/IQxUcmFuc3BhcmVuY3kDAAAAAAAA8D8KDmumPBhrpjyp0/E+CkQJJ8AM'
..'k5M/k1ClwAr4V9g8VfzoPKZ0DT0KIIEtwPLwoT+BcaXACg5rpjwlcUc/H2umPAq5qzbAm0PEP0FPpcAKYwknwEd4wT/2TqXACkqBLcAbcN8/WG+lwApfYyLAnjOiPzhxpcAKTwknwK9YpD/8T6XACoQJJ8DGvvI/O02lwAqJYyLAWAzfPxRvpcAKc2MiwHJ0vz8wcKXA'
..'CnkJJ8ACdOE/1k2lwApPiBfA7UPEP3pOpcAKNL2uPN1PRz/wtAU/CnKbJsDUO8Q/a/mlwAoAAAAAHwW0wo/C9bwKl+lhPc0lzz1wEoM6CoIGKMBL2Pg/02amwAqPwvU8CtejvAAANMMDAAAAAAAAGEAKAACAPwAAgD8AAIA/CgAAAAAAAAAAAAAAAAqQwM08DDgLPm8S'
..'gzoKtcsmwHI65D94Z6bACo/C9TwK16O8uN4sQwr0EgI+VduiPHASgzoKniQowDhY2z/RZ6bACo/C9TwK16O84Xq3wgoXkNg9E6JDPG8SgzoKSYwnwA/H4D+cZ6bACo/C9TwK16O8HwW2QgoMfIM+29pyO28SgzoKiMAnwCb69z/YZqbACpnAzTwKOAs+bxKDOgqpvijA'
..'4W/WP/9npsAKj8L1PArXo7yuR4G/CvISAj5e26I8cBKDOgoe4SfAwY7fP6lnpsAKj8L1PArXo7yux7xCChGQ2D0gokM8bxKDOgpWLijAVgfaP9tnpsAKj8L1PArXo7xSuKXCCgp8gz7g2nI7bxKDOgqGbSbAqHPAP6RopsAKHx9RPe6Ukz3hgIQ/CqlyJ8BPK9Q/UhWm'
..'wAoAALTCCtejvAAAAAADAAAAAAAAEEAKJ/J6PQwIhTrhgIQ/CppyJ8BdK9Q/d2imwArearM8EggFO9ymaD4Ks0UkwLO0zz/raqbACuH6sUJmZrRCmpmzwgoNoCw9EggFO1PO8T0KNksqwEqAoj8ua6bACpoZhkIfBbTC4fqzQgronyw9EggFO4HO8T0KIN4nwKy+/z/H'
..'aqbACkhhlsLD9bNC4fqzwgr9Z/o9J4ONPcNKQz8KZX0nwLH20D+W6aXACuH6scKambPCmpmzQgo8hP89ffyYO8FKQz8KX30nwLj20D8mYKbACqqyHz4ajEc7IJyDPwrmvSbAxSzaP8pXpsAKmG9cPzmDjT0Y2N09Ch5gJ8C2YdI/0w+mwAoK10NAw/WzQgAAtMIKTZxY'
..'PCMIBTtV9148Ci19JsCFWQdAwWqmwArs0Z/CpPCzQuH6s8IKNOTxPCMIBTvKqcc7Ct83KcCZPvg/7GqmwAofhUvBw/WzQgAAtMIKRcdfOyMIBTu0zDg+CpQyKMBEMwJA2WqmwApIYZjCpPCzQuH6s8IKDmj6PTmDjT3GSkM/CtMRKcA08LY/9g+mwApxvaVCexS0wsP1'
..'s0IK6hR4PCMIBTtbrkI8CtpKJMDRxcU/22qmwAozs69CexS0Qkjhs8IKEFrePCMIBTuBNdk7CtPYI8Bi9dk/yWqmwArsUfhBPQq0wgAAtEIKBud/OyMIBTvsmSE+CnWTI8CUNc8/zWqmwApcj65C1yO0wmbms0IKEmj6PSqDjT28SkM/Ct9/J8Av99A/JzimwArh+rHC'
..'j8KzwnG9s0IKJWr6PTqDjT0fSUM/CvxJJ8CiHLk/Dw6mwArh+rHC1yOswrgerEIK5BZ4PCUIBTvLrEI8Cp73KsB7E6k/jGqmwApmZp/Cj0KzwlI4s0IKH1nePCUIBTtrNtk7Cof6KcDg95Q/E2ymwAqPwhzCKdyzQuzRs8IKBOl/OyYIBTummCE+ChUCK8AziJ8/Smum'
..'wAr2KKnCXI+ywh+FskIKPag6PkbsnD+eM+M8CkoTK8DwtPY/bEemwAoK1yM8CtejvAAANMMKPqg6PkjsnD+BM+M8CsKDI8CutPY/a0amwAqPwvU8CtcjvAAANMMKHx9RPd6Ukz3kgIQ/CtEpJ8D4KtQ/RhWmwAoAALTCCtcjvAAAAAAKJ/J6Pf8HhTrjgIQ/CscpJ8AG'
..'K9Q/a2imwArfarM8AwgFO96maD4K4fwjwFq0zz/saqbACuH6sULDdbRCPYqzwgoRoCw9AwgFO1PO8T0KcQIqwPZ/oj8fa6bACuqfLD0DCAU7hs7xPQpAlSfAWL7/P7VqpsAKSGGWwuH6s0LD9bPCCv5n+j0Xg409xUpDPwqMNCfAWvbQP4vppcAK4fqxwj2Ks8I9irNC'
..'Cj6E/z1s/Jg7xUpDPwqMNCfAYvbQPxtgpsAKrbIfPgOMRzsinIM/ChB1JsBuLNo/wFemwAqZb1w/KoONPRnY3T0KRxcnwF9h0j/HD6bACgrXQ0Dh+rNCAAC0wgpSnFg8FwgFO1j3XjwKSTQmwFpZB0CxaqbACuzRn8Kk8LNCw/Wzwgoz5PE8FwgFO9KpxzsKAu8owEY+'
..'+D/VaqbACh+FS8Hh+rNCAAC0wgpHx187FwgFO7bMOD4Ks+knwBozAkDEaqbACkhhmMLD9bNC4fqzwgoVaPo9KYONPchKQz8KBMkowN7vtj/oD6bACnG9pUJcD7TCw/WzQgrxFHg8FQgFO16uQjwKCwIkwHbFxT/baqbACjOzr0K4HrRCKdyzwgoYWt48FQgFO4I12TsK'
..'/o8jwAf12T/IaqbACuxR+EEfBbTCAAC0QgoO5387FQgFO+yZIT4Ko0ojwDg1zz/PaqbAClyPrkLXI7TCSOGzQgoUaPo9GoONPb1KQz8KCzcnwNj20D8bOKbACuH6scIzs7PCFK6zQgomavo9LYONPSNJQz8KLAEnwEocuT8HDqbACuH6scJ7FKzCXA+sQgrkFng8GggF'
..'O8+sQjwK2K4qwCgTqT95aqbACmZmn8JxPbPCUjizQgojWd48GggFO2o22TsKx7EpwIv3lD8GbKbACgjpfzsaCAU7ppghPgpRuSrA34efPzhrpsAK9iipwj2KssIfhbJCCp7pYT3VJc89cBKDOgrFlCbAW7X8P5pmpsAKl8DNPBA4Cz5vEoM6CiL0JcBmPeQ/aWemwAqP'
..'wvU8CtcjvLjeLEMK+RICPlvbojxwEoM6CgxNJ8AsW9s/vWemwAqPwvU8CtcjvOF6t8IKHZDYPRuiQzxvEoM6Cra0JsADyuA/i2emwAqPwvU8CtcjvB8FtkIKD3yDPuTacjtvEoM6CvPoJsAa/fc/xWamwAoLIzU+ViOePHASgzoKJXAnwBsc2z/BZ6bACo/C9TwK1yO8'
..'uB66wgoeosM8H5DYPXASgzoKu/QmwMNhxj9waKbACo/C9TwK1yO8rkeBPwoV/nU8fDqsPXASgzoK3T8nwDnIzj8paKbACo/C9TwK1yO8FO4wwwqp2zA+x4y0O28SgzoKjnwowNhfvz+2aKbACo/C9TwK1yO8cT3GwgpI02Q9QdNkPQ1rpjwKit83wKc9xT+n9aXACo/C'
..'9bxx/TNDAAAAAAoAAIA/AACAP83MzD0KrJ0RPS6qYD2FTvE8CqEoN8Dy9+k/YHOlwAp2WjfA/U3FP1hspcAKXhE4wGRAoD/19qXACratN8Cc5+k/rvylwApJjDfAvVCgP6dtpcAhBVNvdW5kIQxBY2Nlc3NEZW5pZWQhB1NvdW5kSWQhFnJieGFzc2V0aWQ6Ly8yMDA4'
..'ODg1MTAhDUFjY2Vzc0dyYW50ZWQhFnJieGFzc2V0aWQ6Ly8yMDA4ODg0NjghCURvb3JDbG9zZSEWcmJ4YXNzZXRpZDovLzI1Nzg0MTY0MCEIRG9vck9wZW4hFnJieGFzc2V0aWQ6Ly8yNTE4ODU0OTUhCE1lc2hQYXJ0IQdCdXR0b24yBAwBWQFaAQMAAAAAAABxQAqP'
..'wvU8CtcjvAAAAAAK/l81QLzOW0DINtjACry8Xz+1o60/AKFgPyEGTWVzaElkIRdyYnhhc3NldGlkOi8vMzIxMzIyMDM1NiEITWVzaFNpemUKSuimPla5AD8fhqY+IQlUZXh0dXJlSUQhF3JieGFzc2V0aWQ6Ly8yNDU5OTMwNjk2IQ9Qcm94aW1pdHlQcm9tcHQhDEhv'
..'bGREdXJhdGlvbgMAAACgmZnJPyEPS2V5Ym9hcmRLZXlDb2RlAwAAAAAAgFlAIQpPYmplY3RUZXh0IQdCdXR0b24xBBwBWwFcAQoB+E1AlMJbQEHzTsAKUvgzwwrXIzwAADRDB+kDBCMBXQFeAQb///8DAAAAAACAmEAKAAAAAAAAtEIAAAAACv2fM7+YM2NALyikwArd'
..'x8U+VpbZQCcWt0ADAAAAoJmZ2T8hElJvbGxPZmZNYXhEaXN0YW5jZQMAAAAAAABZQCEXcmJ4YXNzZXRpZDovLzUwOTY5ODYxNDUhBlZvbHVtZQMAAAAAAAAIQCENUGxheWJhY2tTcGVlZAMAAABgZmbyPyEOV2VsZENvbnN0cmFpbnQhBVBhcnQwIQVQYXJ0MSEHRW5h'
..'YmxlZCEGRm9sZGVyIQlEb29yUGFydHMhBlN0cmlwZQQ3AV8BYAEG///pAwAAAAAAAJFACv2/M7+bPdpADyikwAojWuQ+zMxMPhSDtEAhBFdlbGQhAkMwBGEBYgFQASECQzEEYwFkAWUBB8cABEEBTQFOAQZjX2IK/R8xvxJIYUAvKKTAChkEFj+tR+FAsByaPgREAU0B'
..'TgEK/5dkwBdIYUAvKKTABEYBTQFOAQr+fwlAF0hhQC8opMAESAFNAU4BCgXAQL9sCt9ALyikwAoZBBY/IFwPPo6XskAESwFNAU4BCgXAQL8PJgU+LyikwAoAAAq9HkhhQDjYn8AK7Lu1M6BQtzKy/3+/CtI7ArEAAIA/dvCJMgoAAIA/AAAAAAAAAAAKAAAAAAAAgD8A'
..'AAAACgCAF7+8qmBA8P2kwAoAAIA//xHorC69uzMKCBLoLAAAgD///z+uCgAAgD8gk3auLo2+MwqnjjyuAACAP/f/my8KAIAXv6w9YkDw/aTACuOOTDkt6g864P9/vwofGbC3/v9/P9/pDzoKAACAP/oyrzf2k0w5Cv0YsLf+/38/fOoPOgoAAIC/+jKvt/eTTLkKSRmw'
..'t/7/fz976g86CtllCjQFAGYw5v9/vwod4reuAACAP+T/fbAK5xvOM0qQgjKy/3+/Co1YxLAAAIA/YGAqMgpwYsY+6kBiwAArFr4KAACAvwAAAAAAAAAACgCAyT76F83AgAmLPwoAAIC/YAAALgAAgK0KYAAALgAAgD+Y/wksIgEAAAEAAgADAAQAAQkABQAGAAcACAAJ'
..'AAoACwAMAA0ADgAPABAAEQASABMAFAAVAAgAAQABAgAWABcAAgAYAAEAAwIAFgAZAAIAGgABAAQCABYAGwACABwAHQAFAQAWAB4AHwBABEAMAAQALwAwACgAAAQAMQAyACgAAAQAMwA0ACgAAAQALwA1ACgAAAQAMQA2ACgAAAQAMQA3ACgAAAQALwA4ACgAAAQALwA5'
..'ACgAAAQAMQA6ACgAAAQAMQA7ACgAAAQALwA8ACgAAAQAMwA9ACgAAAQAPgA/AEAAQAJAAkACQAKBBABBAEIAQwBEAEUARgBAAkADgQQARwBIAEkARABFAEYAgQQASgBLAEwARABFAEYAAQQATQBOAE8ARABFAEYAAQQAUABRAE8ARABFAEYAQAJAA4EEAFIAUwBUAEQA'
..'RQBGAIEEAFUAVgBXAEQARQBGAAEEAFgAWQBaAEQARQBGAAEEAFsAXABaAEQARQBGAEACQAJAAoEEAF0AXgBfAGAARQBGAAEEAGEAYgBfAGAARQBGAEADQAJABIEEAGMAZABlAEQARQBGAIEEAGYAZwBoAEQARQBGAIEEAGkAagBrAEQARQBGAEACgQQAbABtAG4AYABF'
..'AEYAAQQAbwBwAG4AYABFAEYAgQQAcQByAG4ARABFAEYAQANAAoEEAHMAdAB1AGAARQBGAEACQAIBBAB2AHcAeABEAEUARgABBAB5AHoAewBEAEUARgABBAB8AH0AfgBEAEUARgBAAoEEAH8AgACBAGAARQBGAEACQAIBBACCAIMAhABEAEUARgABBACFAIYAhwBEAEUA'
..'RgABBACIAIkAigBEAEUARgCBBACLAIwAjQBgAEUARgBAAoEEAI4AjwCQAGAARQBGAEACQAIBBACRAJIAkwBEAEUARgABBACUAJUAlgBEAEUARgABBACXAJgAmQBEAEUARgCBBACaAJsAnABEAEUARgBAAkACgQQAnQCeAJ8ARABFAEYAQAJAAoEEAKAAoQCiAGAARQBG'
..'AAEEAKMApACiAGAARQBGAEADQAJABIEEAKUApgCnAEQARQBGAIEEAKgAqQBoAEQARQBGAIEEAKoAqwCsAEQARQBGAEACgQQArQCuAK8AYABFAEYAAQQAsACxAK8AYABFAEYAgQQAsgCzAK8ARABFAEYAQANAAoEEALQAtQC2AGAARQBGAEACQAIBBAC3ALgAuQBEAEUA'
..'RgABBAC6ALsAvABEAEUARgABBAC9AL4AvwBEAEUARgBAAoEEAMAAwQDCAGAARQBGAEACQAIBBADDAMQAxQBEAEUARgABBADGAMcAyABEAEUARgABBADJAMoAywBEAEUARgCBBADMAM0AzgBgAEUARgBAAoEEAM8A0ADRAGAARQBGAEACQAIBBADSANMA1ABEAEUARgAB'
..'BADVANYAlgBEAEUARgABBADXANgA2QBEAEUARgBAAkACgQQA2gDbAJ8ARABFAEYAQAJAA4EEANwA3QDeAEQARQBGAIEEAN8A4ADhAEQARQBGAAEEAOIA4wDkAEQARQBGAAEEAOUA5gDkAEQARQBGAEACQAOBBADnAOgA6QBEAEUARgCBBADqAOsA7ABEAEUARgABBADt'
..'AO4A7wBEAEUARgABBADwAPEA8gBEAEUARgBABgEEAPMA9AD1AEQA9gBGAAAEAPcA+AAoAAAEAPcA+QAoAAEEAPMA+gD1AEQA9gBGAAEEAPMA+wD1AEQA9gBGAAAEAPcA/AAoAAUMABYAIAAFAAYACQAhAAsAIgAjACQADQAlAA8AJgAnACgAEQApACoAKwATACwALQAu'
..'AP0ABwIAFgD+AP8AAAH9AAcCABYAAQH/AAIB/QAHAgAWAAMB/wAEAf0ABwIAFgAFAf8ABgEHAQUNABYACAEFAAYACQAKAAsACQENAA4ADwAKAScACwERAAwBKgALARMADQEOAQ8BEAERARIBEwEUAQwDABUBFgEXARgBGQEZAAcBBQ0AFgAaAQUABgAJAAoACwAbAQ0A'
..'DgAPAAoBJwD1ABEAHAEqAB0BEwANAQ4BDwEQAREBEgETARQBDgMAFQEWARcBGAEZARkABAAFCwAWABkABQAGAAkAHgELAB8BDQAgAQ8AIQEnACIBEQAjASoAIgETACQBLQAlAf0AEAMAFgD+ACYBJwH/AAAB/QAQAwAWAAEBJgEnAf8AAgH9ABAEABYAAwEmAScB/wAo'
..'ASkBKgH9ABAFABYABQErASwBJgEnAf8AKAEpASoBLQEQAAAtARABADABJAAtARABADABJAAtARABADABJAAtARABADABJAAtARAAADEBAwEAFgAyAQQAGwkAFgAzAQkAHgELADQBDQA1AQ8ANgEnACIBEQA3ASoAIgETADgBOQEcAgA6ATsBPAE9AQQAGwgACQA+AQsA'
..'PwENAEABDwA2AScAIgERAEEBKgAiARMAQgEEABsIAAkAPgELAEMBDQBAAQ8ANgEnACIBEQBEASoAIgETAEIBBAAbCAAJAD4BCwBFAQ0AQAEPADYBJwAiAREARgEqACIBEwBCAQQAGwgACQA+AQsARwENAEABDwA2AScAIgERAEgBKgAiARMASQEEABsIAAkAPgELAEoB'
..'DQBAAQ8ANgEnACIBEQBLASoAIgETAEkBDRUuARAVLwEcFi4BEBYvAR8XLgEQFy8BIhguARAYLwEhGS4BEBkvASAaLgEQGi8BHh0vARw=')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
