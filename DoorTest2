-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 8380 characters

local ScriptFunctions = {
function(script,require)
--Made by xImmortalChaos for Site-40.

local Door = script.Parent.Door
local Door2 = script.Parent.Door2
local Button1 = script.Parent.Button1
local Button2 = script.Parent.Button2
local Open = false

local OpenSound = Door.DoorOpen
local CloseSound = Door.DoorClose

local Debounce = false
function Triggered(Player)
	if Player.Character == nil then return end
	if Player.Character:FindFirstChild("User Setup") == nil then return end
	if Player.Character:FindFirstChild("AccessLevel").Value < 0 then 
		Door.AccessDenied:Play()
		return end
	if Debounce == true then return end
	Debounce = true
	CloseSound:Play()
	--Door.Transparency = 0
	for i,v in pairs(Door:GetChildren()) do
		if v:IsA("Decal") then
			v.Transparency = 0
		end
	end
	spawn(function()
		for i = 3,(Door.Size.z / 0.15)  do
			Door.CFrame = Door.CFrame + (Door.CFrame.lookVector * 0.15)

			wait()
		end
	end)

	spawn(function()
		for i = 3,(Door2.Size.z / 0.15) do
			Door2.CFrame = Door2.CFrame + (Door2.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	wait(15)
	OpenSound:Play()
	spawn(function()
		for i = 3,(Door.Size.z / 0.15) do
			Door.CFrame = Door.CFrame - (Door.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	spawn(function()
		for i = 3,(Door2.Size.z / 0.15) do
			Door2.CFrame = Door2.CFrame - (Door2.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	--Door.Transparency = 1
	for i,v in pairs(Door:GetChildren()) do
		if v:IsA("Decal") then
			v.Transparency = 1
		end
	end
	wait(0.4)
	Debounce = false
end
Button1.ProximityPrompt.Triggered:connect(Triggered)
Button2.ProximityPrompt.Triggered:connect(Triggered)

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end


local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEBkASEEUGFydCEIQW5jaG9yZWQiIQ1Cb3R0b21TdXJmYWNlAwAAAAAAAAAAIQZDRnJhbWUECQBHAUgBIQhQb3NpdGlvbgoD1g3Dz3qUvpwsDEAhBFNpemUKzMwsQQAAgD8ehe9BIQpUb3BTdXJmYWNlIQVNb2RlbCEETmFtZSEUTGV2ZWwgRGV2ZWxvcGVyIGRvb3Ih'
..'CldvcmxkUGl2b3QESQFKAUsBIQREb29yBEkBTAFNASESU2NyaXB0ZWRDb21wb25lbnRzBE4BTwFQASEGU2NyaXB0IQRNYWluIQ5Vbmlvbk9wZXJhdGlvbiEFRG9vcjIhCkJyaWNrQ29sb3IHwgAEJQBRAVIBIQpDYW5Db2xsaWRlAiEFQ29sb3IGo6KlIQhNYXRlcmlh'
..'bAMAAAAAAICJQCELT3JpZW50YXRpb24KAAAAAArXI7yPwvU8Cut5C8PoRtI/ADB8wCEIUm90YXRpb24KzcxMPbSzRz8l2Q8/IQxUcmFuc3BhcmVuY3kDAAAAAAAA8D8KDmumPBhrpjyp0/E+CqB8C8OjpqE/Q1l7wAr4V9g8VfzoPKZ0DT0KmXsLw4kEsD+P6IDACg5r'
..'pjwlcUc/H2umPAqrfAvDMlfSP9x9hcAKrXwLw96Lzz9iWXvACqp7C8Oyg+0/pOiAwAqbewvDNkewP16zdsAKpXwLw0Zssj9OWXvACrt8C8MuaQBAg1l7wAqsewvD7x/tP4izdsAKo3sLwwmIzT9ys3bACrZ8C8OZh+8/eFl7wAqxfAvDhFfSP07Ya8AKNL2uPN1PRz/w'
..'tAU/Cll3C8NrT9I/cet6wAoAAAAAcf0zQ4/C9bwKl+lhPc0lzz1wEoM6Cu1zC8PwdQNAgVZ8wAqPwvU8PQq0wgAANMMDAAAAAAAAGEAKAACAPwAAgD8AAIA/CgAAAAAAAAAAAAAAAAqQwM08DDgLPm8SgzoK6HMLwwdO8j+0G3vACo/C9Tw9CrTCuN4sQwr0EgI+Vdui'
..'PHASgzoK5XMLw81r6T+ddHzACo/C9Tw9CrTC4Xq3wgoXkNg9E6JDPG8SgzoK53MLw6Ta7j9I3HvACo/C9Tw9CrTCHwW2QgoMfIM+29pyO28SgzoK7XMLw90GA0CHEHzACpnAzTwKOAs+bxKDOgrjcwvDeIPkP6gOfcAKj8L1PD0KtMKuR4G/CvISAj5e26I8cBKDOgrm'
..'cwvDWKLtPx0xfMAKj8L1PD0KtMKux7xCChGQ2D0hokM8bxKDOgrkcwvD7RroP1V+fMAKj8L1PD0KtMJSuKXCCgp8gz7g2nI7bxKDOgrecwvDPofOP4W9esAKHx9RPe6Ukz3hgIQ/Cnl2C8PmPuI/qMJ7wAoAALTCPQq0wgAAAAADAAAAAAAAEEAKJ/J6PQwIhTrhgIQ/'
..'CuBzC8P0PuI/mcJ7wArdarM8EggFO9ymaD4KzHMLw0rI3T+ylXjACuH6sULNzEw+mpmzwgoNoCw9EggFO1PO8T0KynMLw+CTsD81m37ACpoZhkJx/TND4fqzQgronyw9EggFO4HO8T0KzXMLwyLpBkAfLnzACkhhlsIK16O84fqzwgr9Z/o9J4ONPcNKQz8K13cLw0gK'
..'3z9kzXvACuH6scLNzDPDmpmzQgo8hP89ffyYO8FKQz8KInQLw08K3z9ezXvACqqyHz4ajEc7IJyDPwpldAvDXEDoP+UNe8AKmG9cPzmDjT0Y2N09CqV2C8NMdeA/HbB7wAoK10NACtejvAAAtMIKTJxYPCMIBTtV9148Cs5zC8NQYw5ALM16wArs0Z/Cj8L1vOH6s8IK'
..'NOTxPCMIBTvIqcc7CsxzC8MYKQNA3od9wAofhUvBCtejvAAAtMIKQ8dfOyMIBTu0zDg+Cs1zC8MPPQlAk4J8wApIYZjCj8L1vOH6s8IKEWj6PTmDjT3GSkM/CqR2C8PKA8U/0mF9wApxvaVCw/UzQ8P1s0IK7RR4PCMIBTtbrkI8Cs1zC8Nn2dM/2Zp4wAozs69CCtcj'
..'PUjhs8IKEFrePCMIBTuCNdk7Cs1zC8P4COg/0ih4wArsUfhB4fozQwAAtEIKCOd/OyMIBTvsmSE+Cs1zC8MqSd0/dON3wApcj65CFO4zQ2bms0IKEWj6PSqDjT28SkM/CmN1C8PFCt8/3s97wArh+rHCSOEzw3G9s0IKKGr6PTqDjT0fSUM/CrR2C8M6MMc/+5l7wArh'
..'+rHC7BEww7gerEIK5BZ4PCUIBTvMrEI8CtBzC8MTJ7c/nUd/wApmZp/CSKEzw1I4s0IKH1nePCUIBTtqNtk7CsNzC8N4C6M/hkp+wAqPwhzCKVyPvezRs8IKB+l/OyYIBTummCE+CspzC8PLm60/FFJ/wAr2KKnCrkczwx+FskIKO6g6PkbsnD+fM+M8Cuh0C8NDZAJA'
..'SWN/wAoK1yM8PQq0wgAANMMKPqg6PkjsnD+BM+M8CvF0C8MiZAJAwNN3wAqPwvU8HwW0wgAANMMKHx9RPd6Ukz3kgIQ/Cnp2C8OPPuI/0Hl7wAoAALTCHwW0wgAAAAAKJ/J6Pf8HhTrjgIQ/CuFzC8OdPuI/xnl7wArfarM8AwgFO96maD4KzHMLw/HH3T/gTHjACuH6'
..'sUIfhWs+PYqzwgoRoCw9AwgFO1PO8T0Ky3MLw42TsD9wUn7ACuqfLD0DCAU7hs7xPQrOcwvD9+gGQD/le8AKSGGWwgrXI7zD9bPCCv5n+j0Xg409xUpDPwrYdwvD8QnfP4uEe8AK4fqxwh/FM8M9irNCCj6E/z1s/Jg7xUpDPwojdAvD+QnfP4uEe8AKrbIfPgOMRzsi'
..'nIM/CmZ0C8MFQOg/D8V6wAqZb1w/KoONPRrY3T0KpnYLw/d04D9GZ3vACgrXQ0AK1yO8AAC0wgpSnFg8FwgFO1j3XjwKz3MLwyZjDkBIhHrACuzRn8KPwvW8w/Wzwgoz5PE8FwgFO9OpxzsKzXMLw+8oA0ABP33ACh+FS8EK1yO8AAC0wgpHx187FwgFO7bMOD4KznML'
..'w+Y8CUCyOXzACkhhmMIK16O84fqzwgoUaPo9KYONPchKQz8KpXYLw3QDxT8DGX3ACnG9pUJS+DNDw/WzQgrxFHg8FQgFO16uQjwKznMLww3Z0z8KUnjACjOzr0KPwnU9KdyzwgoYWt48FQgFO4I12TsKznMLw54I6D/933fACuxR+EFx/TNDAAC0QgoO5387FQgFO+yZ'
..'IT4KznMLw89I3T+imnfAClyPrkIU7jNDSOGzQgoUaPo9GoONPb1KQz8KZHULw28K3z8Kh3vACuH6scKa2TPDFK6zQgonavo9LYONPSNJQz8KtHYLw+Ivxz8rUXvACuH6scI9CjDDXA+sQgrmFng8GggFO8+sQjwK0XMLw8Amtz/X/n7ACmZmn8K4njPDUjizQgojWd48'
..'GggFO2o22TsKxHMLwyMLoz/GAX7ACgrpfzsaCAU7ppghPgrLcwvDd5utP1AJf8AK9iipwh9FM8MfhbJCCp7pYT3VJc89cBKDOgrwcwvDeWQFQMTkesAKl8DNPBA4Cz5vEoM6CulzC8P7UPI/IUR6wAqPwvU8HwW0wrjeLEMK+RICPlvbojxwEoM6CuZzC8PBbuk/C517'
..'wAqPwvU8HwW0wuF6t8IKHZDYPRuiQzxvEoM6CuhzC8OY3e4/tQR7wAqPwvU8HwW0wh8FtkIKD3yDPuTacjtvEoM6Cu5zC8NXCANA8jh7wAoLIzU+ViOePHASgzoK6HMLw7Iv6T8kwHvACo/C9TwfBbTCuB66wgodosM8H5DYPXASgzoK4nMLw1p11D+6RHvACo/C9Twf'
..'BbTCrkeBPwoV/nU8fDqsPXASgzoK5HMLw9Db3D/cj3vACo/C9TwfBbTCFO4wwwqp2zA+x4y0O28SgzoK33MLw29zzT+NzHzACo/C9TwfBbTCcT3GwgpI02Q9QdNkPQ1rpjwKd3cLwz5R0z/FF4bACo/C9bzh+rNCAAAAAAoAAIA/AACAP83MzD0Kqp0RPS6qYD2FTvE8'
..'Col7C8OJC/g/ULyFwArBewvDlGHTPzvVhcAKbXcLw/tTrj+vMIbACj93C8Mz+/c/2/6FwAq3ewvDVGSuPyXuhcAhBVNvdW5kIQxBY2Nlc3NEZW5pZWQhB1NvdW5kSWQhFnJieGFzc2V0aWQ6Ly8yMDA4ODg1MTAhDUFjY2Vzc0dyYW50ZWQhFnJieGFzc2V0aWQ6Ly8y'
..'MDA4ODg0NjghCURvb3JDbG9zZSEWcmJ4YXNzZXRpZDovLzI1Nzg0MTY0MCEIRG9vck9wZW4hFnJieGFzc2V0aWQ6Ly8yNTE4ODU0OTUhCE1lc2hQYXJ0IQdCdXR0b24yB+sDBAkBUwFUAQYREREDAAAAAAAAcUAKj8L1PB8FtMIAAAAACm7lCcOU2GJA/B/CPwoAAAAA'
..'AAC0wgAAAAAKvLxfP7WjrT8AoWA/IQZNZXNoSWQhF3JieGFzc2V0aWQ6Ly8zMjEzMjIwMzU2IQhNZXNoU2l6ZQpK6KY+VrkAPx+Gpj4hCVRleHR1cmVJRCEXcmJ4YXNzZXRpZDovLzI0NTk5MzA2OTYhD1Byb3hpbWl0eVByb21wdCEMSG9sZER1cmF0aW9uAwAAAKCZ'
..'mck/IQ9LZXlib2FyZEtleUNvZGUDAAAAAACAWUAhCk9iamVjdFRleHQhB0J1dHRvbjEEGgFVAVYBCldrDcNmzGJABFDzPwqk8IzCcb2zQqTwjEIH6QMEHwFXAVgBBv///wrjhQvDcj1qQAA4AcAK3cfFPlaW2UAnFrdAAwAAAGBmZuY/IRJSb2xsT2ZmTWF4RGlzdGFu'
..'Y2UDAAAAAAAAWUAhF3JieGFzc2V0aWQ6Ly81MDk2OTg2MTQ1IQZWb2x1bWUDAAAAAAAACEAhDVBsYXliYWNrU3BlZWQDAAAAYGZm8j8hDldlbGRDb25zdHJhaW50IQVQYXJ0MCEFUGFydDEhBkZvbGRlciEJRG9vclBhcnRzIQZTdHJpcGUEMgFZAVoBBv//6QMAAAAA'
..'AACRQArkhQvDiMLdQABAAcAKI1rkPszMTD4Ug7RAIQRXZWxkIQJDMARbAVwBXQEhAkMxBF4BXwFgAQfHAAQ8AWEBYgEGY19iCuOFC8PsUWhAAJgAwAoZBBY/rUfhQLAcmj4EPwFjAWQBCuOFC8PsUWhAAHScwARBAWMBZAEK44ULw+xRaEAAwFQ/BEMBYwFkAQrjhQvD'
..'XI/iQACABMAKGQQWPyBcDz6Ol7JABEYBYwFkAQrjhQvDwMJ1PgCABMAKAACAP3ZQijKgNw2kCnZQirIAAIA/v68CsQo1fwvDirRnQABg9L8KZhGfNICHzB8AAIA/CgAAAAAAAIA/gL0/IApWXZ40epFZrub/fz8KXf+zrwAAgD9/kVkuCjV/C8N6R2lAAGD0vwrk/38/'
..'peoPOuUnTDkKUOoPuv7/fz8iGLC3CuD/fz8u6g864idMOQrg6Q+6/v9/P7AYsLcK9SxMuf4yrzcAAIA/Cn3qD7r+/38/jhiwtwr2LEw5/jKvtwAAgL8KfOoPuv7/fz/aGLC3Cub/fz8EAHIwsM2ItArk/3EwAACAP29jxq4K5v9/P38QkjKX25y0CnLwgrIAAIA/GA3e'
..'sApwYsY+6kBiwAArFr4KAACAvwAAAAAAAAAACgAAAAAAAIA/AAAAAAoAgMk++hfNwIAJiz8KAACAv2AAAC4AAICtCmAAAC4AAIA/mP8JLArm/38/69DGMpnzorQK2bC3sgAAgD8MFg+xCrL/fz/o8NUyd1WltAq1kKiyAACAP2N8G7EhAQAABgACAAMABAAFAAYABwAI'
..'AAkACgALAAwABQANAAACAA4ADwAQABEADQACAgAOABIAEAATAA0AAwIADgAUABAAFQAWAAQBAA4AFwAYAEAEQAwAAQAqACsAJAAAAQAsAC0AJAAAAQAuAC8AJAAAAQAqADAAJAAAAQAsADEAJAAAAQAsADIAJAAAAQAqADMAJAAAAQAqADQAJAAAAQAsADUAJAAAAQAs'
..'ADYAJAAAAQAqADcAJAAAAQAuADgAJAAAAQA5ADoAOwBAAkACQAJAAoEBADwAPQA+AD8AQABBAEACQAOBAQBCAEMARAA/AEAAQQCBAQBFAEYARwA/AEAAQQABAQBIAEkASgA/AEAAQQABAQBLAEwASgA/AEAAQQBAAkADgQEATQBOAE8APwBAAEEAgQEAUABRAFIAPwBA'
..'AEEAAQEAUwBUAFUAPwBAAEEAAQEAVgBXAFUAPwBAAEEAQAJAAkACgQEAWABZAFoAWwBAAEEAAQEAXABdAFoAWwBAAEEAQANAAkAEgQEAXgBfAGAAPwBAAEEAgQEAYQBiAGMAPwBAAEEAgQEAZABlAGYAPwBAAEEAQAKBAQBnAGgAaQBbAEAAQQABAQBqAGsAaQBbAEAA'
..'QQCBAQBsAG0AaQA/AEAAQQBAA0ACgQEAbgBvAHAAWwBAAEEAQAJAAgEBAHEAcgBzAD8AQABBAAEBAHQAdQB2AD8AQABBAAEBAHcAeAB5AD8AQABBAEACgQEAegB7AHwAWwBAAEEAQAJAAgEBAH0AfgB/AD8AQABBAAEBAIAAgQCCAD8AQABBAAEBAIMAhACFAD8AQABB'
..'AIEBAIYAhwCIAFsAQABBAEACgQEAiQCKAIsAWwBAAEEAQAJAAgEBAIwAjQCOAD8AQABBAAEBAI8AkACRAD8AQABBAAEBAJIAkwCUAD8AQABBAIEBAJUAlgCXAD8AQABBAEACQAKBAQCYAJkAmgA/AEAAQQBAAkACgQEAmwCcAJ0AWwBAAEEAAQEAngCfAJ0AWwBAAEEA'
..'QANAAkAEgQEAoAChAKIAPwBAAEEAgQEAowCkAGMAPwBAAEEAgQEApQCmAKcAPwBAAEEAQAKBAQCoAKkAqgBbAEAAQQABAQCrAKwAqgBbAEAAQQCBAQCtAK4AqgA/AEAAQQBAA0ACgQEArwCwALEAWwBAAEEAQAJAAgEBALIAswC0AD8AQABBAAEBALUAtgC3AD8AQABB'
..'AAEBALgAuQC6AD8AQABBAEACgQEAuwC8AL0AWwBAAEEAQAJAAgEBAL4AvwDAAD8AQABBAAEBAMEAwgDDAD8AQABBAAEBAMQAxQDGAD8AQABBAIEBAMcAyADJAFsAQABBAEACgQEAygDLAMwAWwBAAEEAQAJAAgEBAM0AzgDPAD8AQABBAAEBANAA0QCRAD8AQABBAAEB'
..'ANIA0wDUAD8AQABBAEACQAKBAQDVANYAmgA/AEAAQQBAAkADgQEA1wDYANkAPwBAAEEAgQEA2gDbANwAPwBAAEEAAQEA3QDeAN8APwBAAEEAAQEA4ADhAN8APwBAAEEAQAJAA4EBAOIA4wDkAD8AQABBAIEBAOUA5gDnAD8AQABBAAEBAOgA6QDqAD8AQABBAAEBAOsA'
..'7ADtAD8AQABBAEAGAQEA7gDvAPAAPwDxAEEAAAEA8gDzACQAAAEA8gD0ACQAAQEA7gD1APAAPwDxAEEAAQEA7gD2APAAPwDxAEEAAAEA8gD3ACQABAwADgAZAAIAAwAaABsABgAcAB0AHgAfACAAIQAiACMAJAAIACUAJgAkAAoAJwAoACkA+AAGAgAOAPkA+gD7APgA'
..'BgIADgD8APoA/QD4AAYCAA4A/gD6AP8A+AAGAgAOAAAB+gABAQIBBA0ADgADAQIAAwAaAAQBBgAFAR8ABgEhAAcBIwAIAQgACQEmAAoBCgALAQwBDQEOAQ8BEAERARIBCwMAEwEUARUBFgEXARIAAgEEDQAOABgBAgADABoABAEGABkBHwAGASEABwEjAPAACAAaASYA'
..'GwEKAAsBDAENAQ4BDwEQAREBEgENAwATARQBFQEWARcBEgABAAQIAA4AEgACAAMAGgAcAQYAHQEfAB4BCAAfAQoAIAEoACEB+AAPAwAOAPkAIgEjAfoA+wD4AA8DAA4A/AAiASMB+gD9APgADwQADgD+ACIBIwH6ACQBJQEmAfgADwUADgAAAScBKAEiASMB+gAkASUB'
..'JgEpAQ8AACkBDwAAKQEPAAApAQ8AACkBDwAAKQEPAAAsAQIBAA4ALQEBABoHAA4ALgEaABwBBgAvAR8AMAEhADEBCAAyAQoAMwE0ARsCADUBNgE3ATgBAQAaBgAaADkBBgA6AR8AOwEhADEBCAA8AQoAPQEBABoGABoAOQEGAD4BHwA7ASEAMQEIAD8BCgA9AQEAGgYA'
..'GgA5AQYAQAEfADsBIQAxAQgAQQEKAD0BAQAaBgAaADkBBgBCAR8AOwEhADEBCABDAQoARAEBABoGABoAOQEGAEUBHwA7ASEAMQEIAEYBCgBEAQ0UKgEPFCsBGxUqAQ8VKwEeFioBDxYrASEXKgEPFysBIBgqAQ8YKwEfGSoBDxkrAR0cKwEb')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
