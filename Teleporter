-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 7464 characters

local ScriptFunctions = {
function(script,require)
function onClicked(player)
	if script.Parent.State.Value == 1 then else return end
	if player.UserId == 21490931 then else script.Parent.Buttons.Main_Power_Button.Err.Playing = true return end
	script.Parent.PrepButton.Main.Sound:Play()
	script.Parent.PrepButton.Main.ClickDetector.MaxActivationDistance = 0
	script.Parent.PrepButton.Main.HingeConstraint.TargetAngle = -90
	script.Parent.Buttons.Lock_Indicator.BrickColor = BrickColor.new("Bright orange")
	script.Parent.PrepButton.First.BrickColor = BrickColor.new("Bright green")
	script.Parent.Buttons.Key.ClickDetector.MaxActivationDistance = 32
	script.Parent.State.Value = 2
end

function onClicked2(player)
	if script.Parent.State.Value == 2 then else return end
	if player.UserId == 21490931 then else script.Parent.Buttons.Main_Power_Button.Err.Playing = true return end
	script.Parent.Buttons.Key.Sound:Play()
	script.Parent.Buttons.Key.HingeConstraint.TargetAngle = -90
	wait(2)
	script.Parent.Buttons.Lock_Indicator.BrickColor = BrickColor.new("Bright green")
	script.Parent.Buttons.Main.Sound:Play()
	script.Parent.Buttons.Main.HingeConstraint.TargetAngle = 75
	script.Parent.Buttons.Key.ClickDetector.MaxActivationDistance = 0
	script.Parent.Buttons.Main_Power_Button.ClickDetector.MaxActivationDistance = 32
	script.Parent.State.Value = 3
end

function onClicked3(player)
	if script.Parent.State.Value == 3 then else return end
	script.Parent.Buttons.Main_Power_Button.ClickDetector.MaxActivationDistance = 0
	script.Parent.State.Value = 4
	script.Parent.PlayerUsed.Value = player.Character
end



script.Parent.PrepButton.Main.ClickDetector.MouseClick:Connect(onClicked)

script.Parent.Buttons.Key.ClickDetector.MouseClick:Connect(onClicked2)

script.Parent.Buttons.Main_Power_Button.ClickDetector.MouseClick:Connect(onClicked3)

script.Parent.State:GetPropertyChangedSignal("Value"):Connect(function()
	if script.Parent.State.Value == 4 then
		script.Parent.Buttons.Main_Power_Button.Sound:Play()
		wait(script.Parent.Buttons.Main_Power_Button.Sound.TimeLength)
		script.Parent.Buttons.Lock_Indicator.BrickColor = BrickColor.new("Really red")
		script.Parent.PrepButton.First.BrickColor = BrickColor.new("Really red")
		script.Parent.PrepButton.Main.HingeConstraint.TargetAngle = 0
		script.Parent.Buttons.Key.HingeConstraint.TargetAngle = 0
		script.Parent.Buttons.Main.HingeConstraint.TargetAngle = 0
		script.Parent.Buttons.Main_Power_Button.Warn.Playing = true
		script.Parent.PlayerUsed.Value:PivotTo(CFrame.new(223.125, 125.62, 55.25))
		wait(4)
		script.Parent.Buttons.Lock_Indicator.BrickColor = BrickColor.new("Really black")
		script.Parent.PrepButton.Main.ClickDetector.MaxActivationDistance = 32
		script.Parent.State.Value = 1
	end
end)

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end
function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end
local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEBAASEFTW9kZWwhBE5hbWUhD1N0YXJ0dXAgQnV0dG9ucyEKV29ybGRQaXZvdAQcAR0BHgEhClByZXBCdXR0b24EHwEgASEBIQ5Vbmlvbk9wZXJhdGlvbiEETWFpbiEKQnJpY2tDb2xvcgdcASEGQ0ZyYW1lBBUAIgEjASEKQ2FuQ29sbGlkZQIhBUNvbG9yBu3q6iEL'
..'T3JpZW50YXRpb24KAAC0QgAAtMIAAAAAIQhQb3NpdGlvbgogXIXCImtsQKcaVMIhCFJvdGF0aW9uCgAAtEIAAAAAAAC0QiEEU2l6ZQoAUIA+ANhMPgAMAD8hDFVzZVBhcnRDb2xvciIhBFBhcnQKAQCAPsjMTD7EzEw+CiBchcIiBXZARxpUwgMAAAAAAAAQQAoAAIA/'
..'AACAPwAAgD8KAAAAAAAAAAAAAAAACg7NzD3NzMw9zMzMPgoYXIXCIjhpQIdnVMIKAAC0wgAAAAAAAAAAIQlXZWRnZVBhcnQKzczMPc3MTD3OzMw+CrQ1hcIiOGlAp2dUwgoAALTCAAC0wgAAAAAKfIKFwiI4aUCnZ1TCCgAAtMIAALRCAAAAACEFU291bmQhDVBsYXli'
..'YWNrU3BlZWQDAAAAAAAA+D8hB1NvdW5kSWQhFnJieGFzc2V0aWQ6Ly8yMjQ5MTg3MDYhBlZvbHVtZQMAAAAAAADwPyENQ2xpY2tEZXRlY3RvciEKRXJyb3JQcmVzcyEWcmJ4YXNzZXRpZDovLzEzNjA3NTExNyEKQXR0YWNobWVudAQ4ACQBJQEKAAC0wsr4M8MAAAAA'
..'Cvj//z0AAIA1fJkZviEPSGluZ2VDb25zdHJhaW50IQtBdHRhY2htZW50MCELQXR0YWNobWVudDEhDEFjdHVhdG9yVHlwZQMAAAAAAAAAQCEMQW5ndWxhclNwZWVkAwAAAAAAACRAIQ5TZXJ2b01heFRvcnF1ZQMAAAAAAABZQCEIQW5jaG9yZWQhDUJvdHRvbVN1cmZh'
..'Y2UDAAAAAAAAAAAHGgAESQAiASYBBhsqNQoAAAAAAAC0wgAAAAAKXl2FwmKGdkDUnFPCCoXrhUFm5rPCheuFwQrMzMw9EhKSPsowlz4hClRvcFN1cmZhY2UhBVNoYXBlBFEAJwEoASEITWF0ZXJpYWwDAAAAAAAAkUAKkFmFwm5ybUAMtVLCCoCZmT80M7M+aj2qPyEU'
..'SWRlbnRpZmljYXRpb25OdW1iZXIHRQEEVwApASoBBt/f3gpfX4XCwhVNQN1YU8IKFK6zQmbms8IUrrNCCs3MTD03zPQ97VE4PiEMVHJhbnNwYXJlbmN5IQpTdXJmYWNlR3VpIQpDYW52YXNTaXplCwAAyEIAAEhCIQRGYWNlAwAAAAAAAAhAIQ5MaWdodEluZmx1ZW5j'
..'ZSEJVGV4dExhYmVsIRBCYWNrZ3JvdW5kQ29sb3IzBv///yEWQmFja2dyb3VuZFRyYW5zcGFyZW5jeQwAAIA/AQAAAIA/AQAhBEZvbnQDAAAAAAAAKEAhBFRleHQhB1BSRVAgVFAhClRleHRDb2xvcjMhCFRleHRTaXplBG0AJwEoAQo+vITCQOqBQNGcU8IKLcxhPs3M'
..'TD1MyFw+IQVGaXJzdAfsAwR0ACcBKAEG/wAAAwAAAAAAAHJACj68hMJiL2lAcaZTwgqini8+a3aCPcGaKj4EdwAnASgBCh9chcKCBnZAm4FTwgoABIA/AABRPQBqZj8KzczMPc3MTD1CMzM/CrN1hMKCB3ZA24BTwgrNzEw9wsxMPsTMTD4KY4+EwoKgX0DbgVPCCsP1'
..'s8IAALRCAAA0QwrJzEw/zcxMPTbNzD0KI1yFwoJuXED7gFPCCvMohsKCoF9A24FTwgp7QobCggd2QNuAU8IK8yiGwkE2hkDbgVPCCiNchcJB0IdAG4FTwgpjj4TCQTaGQNuBU8IKycxMP83MTD1CMzM/CiNchcKCBnZAm4FTwgQhACsBLAEKfa0cvCggsMJ7CLRCBIoA'
..'JwEoAQo8vITCIi5pQEGdU8IhBlNlY29uZAfrAwSPACcBKAEGERERCj28hMIA64FAoKVTwgfqAwSTAC0BLgEGzc3NCoHChcJsNWlA4olTwgoA0Ew9ANbMPtDMzD4KSOH6PlyPQj/LzEw/Ch9chcK6/nVAgolTwgrNzEw9zMxMP8vMTD8KH1yFwjoBdkCiiVPCCsP1s0IA'
..'ALTCAAA0wwqamfk/AAAAQAEAgD8Kb4KFwh0Bi0ACmlPCCmtmZj8AAABAAAAAQAqvdYTCugR2QCKaU8IhB0J1dHRvbnMELwEgASEBBKEAJwEoAQrNjILC/wmzQGazUsIKzszMPTQzsz5m6xFABKQAJwEoAQohc4TCNaO0QLSzUsIKM2bmPzQzsz6ShgtABKgAMAExAQrd'
..'LuU1AAA0Q8bgj7UKAAAgt8AzMz5/wjU/BKoAJwEoAQoBAIfCUAqzQA20UsIKfcwMPzQzsz4o6hFABK4AMgEzAQpWWGy1AAC0QgAAtMIKAMwjPCSF672XwjW/IQdLZXlob2xlBzcBBLMAJwEoAQafoawK7/aGwqP2o0CIcFPCCktm5j4K16M9lJmZPiEFRGVjYWwhB1Rl'
..'eHR1cmUhKGh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9Mzg2MzA0NjMhDEN5bGluZGVyTWVzaAS6ACcBKAEKH3OEwhMokEAys1LCCjNm5j80M7M+zczMPQS9ACcBKAEKnVmGwvcJs0Bls1LCCszMzD00M7M+hesRQATAACcBKAEKPqaFwkN500CyP1PCClHM'
..'zD7sUTg+mpkZPgTDACcBKAEKzj+DwjN500CwP1PCIQ5Mb2NrX0luZGljYXRvcgTHADQBNQEKAAAAAAAAAAAAALTCCsD7hsIS/sJAQ0hTwgpmZmY/ksJ1Ps3MzD0EywAnASgBAwAAAAAAgJBACgBuhMLTjLJAln9TwgoGCpc/mZkZPmNmhj8EzwA2ATcBCvHb1rQAALTC'
..'AAC0QgoAAAAAgJmZPQAAkDUhEU1haW5fUG93ZXJfQnV0dG9uBxUABNUAOAEoAQbEKBwKAAAAAAAAtMIAALRCCm9rhMJDbLJAKxhUwgqkcLNCZuazwlK4M0MKjsJ1P5qZGT4I14M/IQNFcnIhElJvbGxPZmZNYXhEaXN0YW5jZQMAAAAAAEBvQCEXcmJ4YXNzZXRpZDov'
..'LzEwMDAyOTQzOTIhBVByaW50IRZyYnhhc3NldGlkOi8vMTgwODc3MTkxIQRXYXJuIRdyYnhhc3NldGlkOi8vMTA4NTMxNzMwOSEXcmJ4YXNzZXRpZDovLzEzMzY3NTYxMzUhFU1heEFjdGl2YXRpb25EaXN0YW5jZQTkADkBOgEKjV9BMFuhNrIAALRCCgAAAACAmZm9'
..'AAAAACETUHJpc21hdGljQ29uc3RyYWludCENU2Vydm9NYXhGb3JjZSEFU3BlZWQHhwAE7AAnATsBBnSGnQMAAAAAAICYQAofc4TCcyGyQMWAVMIKiyf1P82RDz9c1gZAAwAAAAAAAOA/CoeiR0ByMBE/CuJlPwreEYTCzpnQQPuWVcIKAAA0wgAAAAAAAAAACoeiR0Bw'
..'MBE/COJlPwrWEYTCYu6UQMrAVcIKAABIQgAAAAAAADTDCqxT4z8FFwU/hQ/6Pwojc4TCwhGyQOJJVMIKjElXQJ+SHD8o6Hc/CjkKhMLNDdNA/edVwgqMSVdAnZIcPybodz8KMQqEwra0kkATFVbCCoQm9T9Xhg8/UtUGQAofc4TC8SCyQMWAVMIhFnJieGFzc2V0aWQ6'
..'Ly84MzM4NzEwODAEAAE8AT0BCn+Gtrx8/zPD+AD1NAoAAAA31tKNvrDIhj8DAAAAAABAj0AhCE1lc2hQYXJ0IQNLZXkEBgEiAT4BCgAAAAAAALRCAAA0wwrv9obCo7qkQPukU8IKj0Ijw2bms0KF64VBCjIzMz8wM7M+zcxMPSEGTWVzaElkIRZyYnhhc3NldGlkOi8v'
..'NDMxMDA0NjI3IQhNZXNoU2l6ZQr6T1ZCNDPLQUoMAkADAAAAIAICaUEhElJvbGxPZmZNaW5EaXN0YW5jZQMAAADAMpHTQSEWcmJ4YXNzZXRpZDovLzQwNDQxMDk1MiEDU2FkIRZyYnhhc3NldGlkOi8vNzE2MDgyNTI1BBUBPwFAAQon4ysy3S7lst0uZTUKNDOzPgAA'
..'gLMAAAAAIQZTY3JpcHQhC051bWJlclZhbHVlIQVTdGF0ZSEFVmFsdWUhC09iamVjdFZhbHVlIQpQbGF5ZXJVc2VkCgAAhcIye5xA9M9TwgoAAIA/AAAAAAAAAAAKAAAAAAAAgD8AAAAACpBZhcLQUohAaE5Twgr8/38/AAABM2YhIrQKaSEitAAA4BwAAIC/CmkhIjQA'
..'ACidAACAPwr6/3+///9Cs2QhIjQK/v9/v///n7H/1wA6Cv/XADoKAIAu//9/Pwr+/0IzAACAP+j+9qcK+v9/P///QjNkISK0CmkhIrQAACgdAACAvwqSoSI0AIBbN///fz8Ky7BquP7/fz/3v1u3Ct2pJDkAAIA//m+auQotdgq96ZCXuYzaf78KaSEiNAAApJ0AAIA/'
..'Cv3/f78CgN+zZiEiNAqoE4XCQ8zBQDviV8IKAACAv5u2oLJmT/mwCpu2oLIAAIA//P//sgr//4MyAACAv/7/f7IKAACgL/7/fzIAAIC/CirZe7gAAIC/H9h/sgr6/38/zXd7uB3sBbcK/v/vMQAAgD/+/38yCv7/f67+/38yAACAvwo71QG4AACAP8JzpCwKAAAAAAAA'
..'gD8AAFgtCgAAgL8AICwdAABMrwpkISK0AACINQAAgL8KAACAv//VCDKUGxQ4Cp5fujIAAIA/AOLLOQr+/0KzAACAv+j+9icKAACAP/z/fzL8//8vCvz/f7IAAIA///8/LzwBAAACAAIAAwAEAAUAAQABAgACAAYABAAHAAgAQAQBHAAdAB4AEwAfACAAIQAAHAAiACMA'
..'JAAAJQAmACcAKAAAJQAmACkAKgACCgACAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAKwADAwAsAC0ALgAvADAAMQAyAAMAACsAAwIAAgAzAC4ANAA1AAMDAAwANgASADcAFAA4ADkAAwMAPAA9AD4APwBAAEEAHAACCwBCABsAQwBEAAoARQAM'
..'AEYAEABHABIASAAUAEkAFgBKABgASwBMAEQATQA9ABwAAgkAQgAbAEMARAAMAE4ATwBQABIAJAAUAFEAFgAkABgAUgBMAEQAHAACDQACAFMAQgAbAEMARAAKAFQADABVABAAVgBPAFAAEgBIABQAVwAWAFgAGABZAEwARABaADEAWwALAwBcAF0AXgBfAGAAMQBhAAwH'
..'AGIAYwBkADEAGABlAGYAZwBoAGkAagBjAGsAQQAcAAILAEIAGwBDAEQACgBFAAwAbAAQAEcATwBQABIAJAAUAG0AFgAkABgAbgBMAEQAHAACDAACAG8AQgAbAEMARAAKAHAADABxABAAcgBPAHMAEgAkABQAdAAWACQAGAB1AEwARAAIAEAJABwAeQB6ACQAARwAewB8'
..'AH0AHwAgACEAABwAfgB/ACQAARwAewCAAH0AHwAgACEAABwAeQCBACQAARwAewCCAH0AHwAgACEAABwAfgCDACQAARwAewCEAH0AHwAgACEAABwAhQCGACQAAggAQgAbAAoARQAMAHYAEABHABIAJAAUAHcAFgAkABgAeAA1ABACAAwAhwASAIgAHAACCwBCABsAQwBE'
..'AAoARQAMAIkAEABHAE8AUAASACQAFACKABYAJAAYAG4ATABEABwAAgwAAgCLAEIAGwBDAEQACgCMAAwAjQAQAI4ATwBzABIAJAAUAI8AFgAkABgAdQBMAEQACABAA0ACgRwAlQCWABMAHwAgACEAARwAlwCYAJkAHwAgACEAgBwAmgCbACQAgBwAnACdACQAAggAQgAb'
..'AAoAkAAMAJEAEACSABIAEwAUAJMAFgAXABgAlAABAAECAAIAngAEAJ8AHAAVCQBCABsAQwBEAAwAoABPAFAAEgAkABQAoQAWACQAGACiAEwARAAcABUJAEIAGwBDAEQADACjAE8AUAASACQAFACkABYAJAAYAKUATABEADUAFwMADACmABIApwAUAKgAHAAVCQBCABsA'
..'QwBEAAwAqQBPAFAAEgAkABQAqgAWACQAGACrAEwARAA1ABkDAAwArAASAK0AFACuABwAFQwAAgCvAEIAGwBDAEQACgCwAAwAsQAQALIATwBQABIAJAAUALMAFgAkABgAtABMAEQAtQAbAgBeADEAtgC3ALgAGwAAHAAVCQBCABsAQwBEAAwAuQBPAFAAEgAkABQAugAW'
..'ACQAGAC7AEwARAAcABUJAEIAGwBDAEQADAC8AE8AUAASACQAFAC9ABYAJAAYAL4ATABEABwAFQoAQgAbAEMARAAMAL8ATwBQABIAJAAUAMAAFgAkABgAwQBMAEQATQA9ABwAFQoAQgAbAEMARAAMAMIATwBQABIAJAAUAMMAFgAkABgAwQBMAEQATQA9ABwAFQwAAgDE'
..'AEIAGwBDAEQACgCMAAwAxQAQAI4ATwBzABIAxgAUAMcAFgDGABgAyABMAEQAHAAVCQBCABsAQwBEAAwAyQBPAMoAEgAkABQAywAWACQAGADMAEwARAC4ACMAADUAIwMADADNABIAzgAUAM8AHAAVDAACANAAQwBEAAoA0QAMANIADgAPABAA0wBPAHMAEgDUABQA1QAW'
..'ANYAGADXAEwARAC4ACYAACsAJgMAAgDYANkA2gAuANsAKwAmAwACANwA2QDaAC4A3QArACYEAAIA3gDZANoALgDfADAAMQArACYCAAIAMwAuADQAKwAmAgAuAOAAMAAxADIAJgEA4QBEADUAJgMADADiABIA4wAUAOQA5QAmAwA8AD0A5gBBAOcAMQAIAEACwAOAHADv'
..'APAA8QCAHADyAPMA9AAAHAD1APYAJABAA4AcAPcA+ADxAIAcAPkA+gD0AAAcAPsA/AAkABULAAIACQAKAOgADADpAA4ADwAQAOoATwDrABIAJAAUAOwAFgAkABgA7QBaAO4AKwAwAgAuAP0AMAAxADUAMAQAAgA6AAwA/gASAP8AFAAAATkAMAMAPAA9AD4AMQBAAAEB'
..'AgEVDAACAAMBCgALAAwABAEOAA8AEAARAE8AUAASAAUBFAAGARYABwEYAAgBCQEKAQsBDAErADQEANkADQEOAQ8BLgAQATAAMQAyADQBAOEARAArADQDAAIAEQEuABIBMAAxADUANAMADAATARIAFAEUABUBOQA0AwA8AD0APgAfAEAAQQAWAQEBAAIACQAXAQECAAIA'
..'GAEZATEAGgEBAQACABsBCAg6AAcIOwARLzoALi87ACUzOgAyMzsAGDk6ADg5OwAa')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
