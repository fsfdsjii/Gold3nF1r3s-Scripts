-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 10432 characters

local ScriptFunctions = {
function(script,require)
function onTouched(hit)
	if hit.Parent:findFirstChild("Humanoid") ~= nil and hit.Parent:findFirstChild("Chest") == nil then
		local g = script.Parent.Parent.Chest:clone()
		g.Parent = hit.Parent
		local C = g:GetChildren()
		for i=1, #C do
			if C[i].className == "Part" or C[i].className == "UnionOperation" or C[i].className == "MeshPart" then
				local W = Instance.new("Weld")
				W.Part0 = g.Middle
				W.Part1 = C[i]
				local CJ = CFrame.new(g.Middle.Position)
				local C0 = g.Middle.CFrame:inverse()*CJ
				local C1 = C[i].CFrame:inverse()*CJ
				W.C0 = C0
				W.C1 = C1
				W.Parent = g.Middle
			end
				local Y = Instance.new("Weld")
				Y.Part0 = hit.Parent.Torso
				Y.Part1 = g.Middle
				Y.C0 = CFrame.new(0, 0, 0)
				Y.Parent = Y.Part0
		end

		local h = g:GetChildren()
		for i = 1, # h do
			h[i].Anchored = false
			h[i].CanCollide = false
		end
	end
end

script.Parent.Touched:connect(onTouched)
end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end
function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end
local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AECeASEFTW9kZWwhBE5hbWUhA1JGTSEKV29ybGRQaXZvdARcAV0BXgEhBFBhcnQhBUdpdmVyIQhBbmNob3JlZCIhDUJvdHRvbVN1cmZhY2UDAAAAAAAAAAAhCkJyaWNrQ29sb3IH9QMhBkNGcmFtZQQZAF8BYAEhCkNhbkNvbGxpZGUCIQVDb2xvcgYEr+whCE1hdGVy'
..'aWFsAwAAAAAAgJRAIQtPcmllbnRhdGlvbgoAAAAAAAC0wgAAAAAhCFBvc2l0aW9uCvn3cMKtb19AoWj0QiEIUm90YXRpb24K1yOxwkjhs8JIYa3CIQRTaXplCgChDUBmZhZAwvUoQCEKVG9wU3VyZmFjZSEMVHJhbnNwYXJlbmN5AwAAAAAAAPA/IQZTY3JpcHQhBVRv'
..'cnNvIQVDaGVzdARhAWIBYwEhCE1lc2hQYXJ0IQhNYWdQb3VjaAQpAGQBZQEKAAAAAAAA8EEAAAAACseNdMLEf1VAAULzQgoa03g+xnLgPszMTD4hBk1lc2hJZCEXcmJ4YXNzZXRpZDovLzU5NzU4MDMzOTEhCE1lc2hTaXplCoDEUD7EhsE+mhgsPiEJVGV4dHVyZUlE'
..'IRdyYnhhc3NldGlkOi8vNjc4MTUzMDE0MQQzAGYBZwEKAAAAAAAAoEEAAAAACsezc8Jmf1VAVRrzQiEUTWVzaGVzL3Jlc3RfQ3ViZS4wMDgEOABoAWkBAwAAAAAAAHFACgAAAAAAAPBCAAAAAApni3TCtqpZQL1F80IKcf0zQwAAcEJx/TPDClxGKz6i6AA/sJRPPiEX'
..'cmJ4YXNzZXRpZDovLzM3NDQxNTk1MjIK0oCnQTQ1bEKAAstBISpodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTM4MTQzMDkzNDQEQABqAWsBCgAAAAAAANxCAAAAAAq3snPCWqpZQDke80IKcf0zQwAAjEJx/TPDIQVGYW5ueQRFAGwBbQEhCE1hc3NsZXNz'
..'ClZacMISazRAbg72Qgop3LPCSOGzws3MssIKSbSWPmOYKT+jD3o/IRdyYnhhc3NldGlkOi8vNTMxODIxODY1NQoASOE/oMbnQPRB30AhBVBvdWNoBEwAbgFvAQpIq3DCXAsvQOIJ80IKmZmZP9UEFT/oJc8+IRdyYnhhc3NldGlkOi8vNTk3NTgxMDY1OQpgdlU/pEYO'
..'P5YinD4EUgBwAXEBCgAAAAAfhbLCFK7nvwppo3DCVOeDQMMg80IKCtcjvR+FssIfheu/Cp5qKj4Lo/s/QJt1PyEXcmJ4YXNzZXRpZDovLzUwMTU0MzYxMTIKAKg+PlKeCkBAm3U/ISpodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTYwNDc3Nzc1NzAhDU1v'
..'bGxlQmFja1BhY2sEWgByAXMBCpm0cMIhJm5A0LfyQgoi6Zw/G7S/P4yoFD8hF3JieGFzc2V0aWQ6Ly81OTc1ODEzNTQyCkBLdD9KO5U/NnLnPiEUUm9ibG94IHBsYXRlIGNlcnJpZXIEYQBiAWMBCgAAAAAAADTDAAAAAAp5jnDCl950QORv9EIKAAA0QwAAAAAAADTD'
..'Cq3PrD8Kys0/Tkm8PyEXcmJ4YXNzZXRpZDovLzY0NjEyNjY1ODAKX7OuQQoK0EFRWL5BBGcAdAF1AQq4rnDCVABcQNU38kIKrwxcP10S7j6Gow0+IRdyYnhhc3NldGlkOi8vNTk3NTc5MTgzNgogTCs/sFO5PmyE3D0hD0hvbGRlciB0aGluZ3kgMwRtAGIBYwEKyI5w'
..'wlCiV0C5h/RCCqP5CUABsRI/kenAPyEXcmJ4YXNzZXRpZDovLzY0NjEyNjUyNzcK1HsLQphLFEGJBcNBIRRNZXNoZXMvcmVzdF9DdWJlLjAwOQR0AHYBdwEKAABwQQAAtEKF69nBCtqzbsJ0MZBAArz1QgoAALRCAACWQuF66sIKln8UPrFF9j7ux5s+IRdyYnhhc3Nl'
..'dGlkOi8vMzc0NDE2MjQzMgrItIRBEBVcQuA2C0IhF3JieGFzc2V0aWQ6Ly8zNzk3OTQyMzY1IQVLbmlmZQR9AHgBeQEKAAAAAOH6H0MAAAAACklubcJmOWBAVR3zQgoAADRD9iigQQAANMMKZMymPhusmD9/WgE+IRdyYnhhc3NldGlkOi8vNTk3NTc5NDI1OAqAcXs+'
..'IGo/PwcymD0hF3JieGFzc2V0aWQ6Ly82ODY3OTQwMDY4IRRNZXNoZXMvcmVzdF9DdWJlLjAzMwSFAHoBewEKBqlrwmTLHEDrpfRCChPstz67znQ/s5FEPyEXcmJ4YXNzZXRpZDovLzM3NDQxNTg4MzUKTU4JQrT1x0LoJbVCIQZUUG91Y2gEjAB8AX0BCgAAAACF65fB'
..'AAC0QgoYaW3CZPxWQM0S80IK0twbP1K4nj5gOxQ+IRdyYnhhc3NldGlkOi8vNTk3NTgwMTI0OApAdxA/II5DPjzI5j0hGE1lc2hlcy9nZWFyX0N1YmUuMDAxICgxKQSVAH4BfwEhGEN1c3RvbVBoeXNpY2FsUHJvcGVydGllcxAK1yM8mpmZPgAAAD8AAIA/AACAPwoA'
..'AAAAexSwQgAAAAAKeZ1wwvBkg0AP7PVCCo/C9Tx7FLBCj8L1vAoAiBY+4InpPgAtMj8hF3JieGFzc2V0aWQ6Ly82MzQ3ODg4NjcxIRdyYnhhc3NldGlkOi8vNjM0Nzg4ODcwOSEcTWVzaGVzL3JhcHRvciBzdHVmZl9DdWJlLjA0OAScAIABgQEK1yZ1whdNWEBRj/RC'
..'CnyeWj64HgU/I2NGPyEXcmJ4YXNzZXRpZDovLzM3NDM5NDIzNjEKslL3QeQhpEI49JpCIQxUcmlwbGUgUG91Y2gEogCCAXMBCrhncMLKZWFAaBf2QgqxdZQ/hH90PzhJGT4hF3JieGFzc2V0aWQ6Ly81OTc1ODA0ODEzCgAjZz9cVD4/nabuPSEJbWVyZ2V6aW5lBKkA'
..'gwGEAQoAAKDAAAC0wgAANMMKSBdvwlxwYEBlDfZCCuH6s8IAAKrCHwW0QgpxPQo+2GlTP/T91D4hF3JieGFzc2V0aWQ6Ly81MDU0OTc2MzczCgh330ABAEhCSPKwQSEqaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD01MDU5NTY1ODExIRxNZXNoZXMvcmFw'
..'dG9yIHN0dWZmX0N1YmUuMDE1BLEAhQGGAQr4HG3CC25dQMH09UIKzkCePue+gz/ccuY+IRdyYnhhc3NldGlkOi8vMzc0MzkzNjg5OQpoGtVBPACbQhwpG0IhBk1pZGRsZQS5AGIBYwEhC0xlZnRTdXJmYWNlAwAAAAAAAABACoiJcMLpD2JAKHz0QiEMUmlnaHRTdXJm'
..'YWNlCgAAAEAAAABAAACAPyEEQmVsdAS+AIcBiAEK1oRwwuSWIUCXfPRCCu5jDEDKoVA/nOukPyEXcmJ4YXNzZXRpZDovLzU5NzU4MjU1MjgK0JLaP9hoIj/WYYA/IQdIb2xzdGVyBMUAiQGKAQoAAAAAAAC0QgAAAAAKtVh1wrc2HUDjcvRCCgpXtEJI4bNCZma1wgq1'
..'bBQ/3cpvP/RNrT4hF3JieGFzc2V0aWQ6Ly81OTc1ODQzODIyCgAV5z6Zqjo/qeiGPgTLAIsBjAEKKBRswtOoWUCdefRCCh+Fs8JI4bPCj8KvwgqkDBg/+kwAPwAsez4hF3JieGFzc2V0aWQ6Ly81OTc1ODEzMDcyCoA4Dz80YRE/fpZsPiEOVW5pb25PcGVyYXRpb24h'
..'BVJBRElPBxoABNYAjQGOAQYvLzAKCtcjvY/CVUAULrRCCntwbMK+fqBACtz1QgoK1yO9j8JVQDMztEIKYAwMQKyXcj5Q0MU9CqZHqD5rHQ0+rI/FPQrxtmzCdrmCQG3e9UIDAAAAAAAAEEAKAACAPwAAgD8AAIA/CgAAAAAAAAAAAAAAAArpHpg9ax0NPnsdjT0Knhxs'
..'woQUvkBT2fVCCgrXI72PwlVA7NGzwgr/t1U/ah0NPnsdjT0K+kBswkSvr0CI2vVCCgrXI72PwlVA7NG9wgo8KE8+ax0NPpRWqT0KNrdswtu/h0Bi3vVCCi8lbMLTHMBAjtn1QgoK1yO9j8JVQOzRlcIK0rngP2sdDT57HY09CrS4bMKVuKNAJt71QgrnHpg9bR0NPnsd'
..'jT0KH69swiyXwECU3fVCCgrXI72PwlVAFC6MQgrWHpg9fR0NPnsdjT0KOF5swkxgwkAz2/VCCgrXI72PwlVA7FG4PQqXtKI+ax0NPnsdjT0KImVswkhinUDF2/VCClm3Cj5rHQ0+lFapPQrmZGzC4/CYQM7b9UIKvQKKPWsdDT6sj8U9Co+3bMLWQ45AVN71QgrkHpg9'
..'cR0NPnsdjT0KVz9swgTgwUBN2vVCCgrXI72PwlVA16NbwgrcHpg9dx0NPnsdjT0KE49swpnkwUCh3PVCCgrXI72PwlVAKVwMQgq9Aoo9bB0NPq2PxT0KT2RswtHBnUC72/VCCiC4bMK4wJ1ALt71QiESZW5mb3JjYWdhdG9fYWxnZW1hB+sDBAQBjwGQAQYREREKUris'
..'QhSu1cIKly3DCohfc8LUA1xAwQ32Qgq4HrZCKVxfwIVrhcIKxbJmPQICCD/3zDs/IRdyYnhhc3NldGlkOi8vMzMyNzM1NzM4NwrY6jBBUJrQQiYFEEMhBEJhbmQHbAEEEAGRAZIBIQpDYXN0U2hhZG93BkdHRwMAAAAAAACRQAoAALRCMzOxQgAAAAAKeLhuwlhxWkAR'
..'XPZCCgAAtEIAAAAAMzOxwgpL2ts9XQVfPgYNDT4hF3JieGFzc2V0aWQ6Ly81MTI4NzQwNDg0CtDnaj3wPfE9SiTxPSEFTW9sbGUEFwFiAWMBCniLcMKhw2ZAYOz1QgrVZIM/O3mJPyRUvj0hF3JieGFzc2V0aWQ6Ly82NDYxMjY1Nzc2CpvUhEEG+opB4GjAPwQcAYMB'
..'hAEKKZ9wwgVYYEBpDfZCIQpNdWx0aSB0b29sBCABkwGUAQoAAAAAKZwyQwAAtEIKmLhuwhfaVUDBUfZCCgAANEOF67E/AAC0wgrsCB8/lRtJPsJGlT0hF3JieGFzc2V0aWQ6Ly81NDgzMTQ5NDUyCqC0yUEfEf9AJlQ9QCEqaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fz'
..'c2V0Lz9pZD01NDgzMTU5NTM0IQpBTiBQUkMgMTUyBCkBlQGWAQoAAAAAAADcQgrXI7wK+SBtwmLlcUBD6PVCCnH9M0MAAIxCAAA0wwpiFD8+hz3KP1F9sz4hF3JieGFzc2V0aWQ6Ly8yMzE2NDg0NjI3CmyZNUGIotxCQXOvQSEqaHR0cDovL3d3dy5yb2Jsb3guY29t'
..'L2Fzc2V0Lz9pZD0zODA2NTE5NTgwBDABggFzAQoHh3DCeOZRQLKK9kIKj8L1PkwokT7MzEw9IRdyYnhhc3NldGlkOi8vNTk3NTc5MTYwMAoAib8++HSAPrzqIT0hJE1lc2hlcy9WZXN0IGZ1bGwgZ2VhciAyX0N1YmUuMDAzICgxKQQ2AZcBmAEK6HJxwn81YEABePZC'
..'Cohikz4y4hc+ZaatPSEXcmJ4YXNzZXRpZDovLzQ4MTQ1MTQ1MTAKgH+aQMA2H0DgB7Y/IRdyYnhhc3NldGlkOi8vNDgxNDUxNDYyMyELUGlzdG9sIG1hZ3MEPgGZAZoBCgAAAAA9iq5CAAAAAAruC3PCq0IzQODM9UIKCtcjPT2KrkLNzEy9Cv3H9j0hfwU//qmyPiEX'
..'cmJ4YXNzZXRpZDovLzU0ODY2MzM1MTcKAMj2PSJ/BT8AqrI+ISpodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTU2MjMyMDE0NzEERQGCAXMBCof7cMLAslhAPVj2QgqDAl8/QEwVP2JnUD4hF3JieGFzc2V0aWQ6Ly81OTc1ODA2Mjk2CuCQNz8Yceg+XDsi'
..'PgRKAYMBhAEK2AVywmBMYEBpDfZCBE0BmwGcAQoAAAAAuB6LQgAAAAAKDlB0wvNCM0BYt/VCCgAAAAC4HotCCtcjvAdjAQRTAZ0BngEGbFhLAwAAAAAAAIBACjCQcMJVASRATp30QgqPwrZCZuazQtejuMIKIMuoPzwqe0Cgwdo/CsIKIj4HyndA69viPgowkHDCbrEl'
..'QE6d9EIKJRDzPsGobT6+wdo/CiyQcMKWFI1ASJ30Qgo3y6g/wahtPvO/vz8KNJBwwvZlNz9UnfRCCliYcMLshWJAyFn0QgpGuI40IQ9GNwAAgD8KpleaNgAAgD+EEka3Cka4jjQgD0Y3AACAPwp4V5o2AACAP4USRrcKiHtwwh+GYkD0VfRCCvb/f794bqo3GYSsNwrB'
..'bqo3AACAP868BbcKNLRdPzjPG7ie/v++CpKXTzgAAIA/4sE/Nwraj3A/tbUbuCocr74KRqsxOAAAgD9vfQM3CoYAAL9nAg43h7NdvwoY8I04AACAP3fQ9bcKCB6vvruLEreOj3C/CoOBiTgAAIA/uhYLuAo2Ijc0EMfxNgAAgD8KwZ2JNwAAgD/XzfG2Cvb/fz+kocu3'
..'Sry+swpIoss3AACAP0lDi7YKPmhSPD5LAb3w2X8/Cvzg2DlZ338/ZUgBPQr2/38/yKPst6qaxLMKbKTsNwAAgD/c8i62Cvb/fz9dnYm3fauBswoBnok3AACAP/fN8bYKx6nyvYNi4r6GmmO/Cr6laz7h2Fs/VF/qvgrCh3C/XHC8N7FIr74K0pu8NwAAgD9rLoM2Cvb/'
..'fz/Go+y3AA9SMQpopOw3AACAP8TxLrYKnVeaNgAAgD/U8i62Cj4Qcr8O8Wo2xqCmvgrrWQw95xtst4TZf78KOhyONwAAgD80hGK3Cvb/fz+MufC3Fy/ZNgo4uvA3AACAP/SzPrYK9v9/v8ij7DfNmsQzCoCMXrc176C3AACAvwqwf7K9mwZ/v6vqqTcK+R6vvrw/M7di'
..'j3C/CiPpezgAAIA/IGILuAr2/3+/YJ2JN32rwTMKA56JNwAAgD/jzfG2CjQiV7T/xvG2AACAvwrDnYk3AACAP8fN8bYKvKg2NDv4RTcAAIA/CppXmjYAAIA/n/tFtwoHttq65/9/P97yCboKVpB/vwdR1rrZ3249CpcFyj6NjOi74jhrvwqZtmo/31GBvbLVyT4KttDH'
..'PAbmwreB7H+/Cnfsfz9fSV64ENHHPApBwRa4AACAP6QZFLgKmOx/P+BPGjjeJsc8CiIfr75/Fhu5Wo9wvwqtWFw3AACAPy8OKrkK9v9/P3O6BrjUhay3Cq+6BjgAAIA/1lFitgpZHEM9tfQUuJy1f78KfkceOAAAgD+UlA24Cl7Gsj6M4024IeNvvwqihig4AACAP9Xs'
..'HLgKd5vItBQQxrcAAIC/Cj10GjcAAIA/xhHGtyoBAAACAAIAAwAEAAUABgABDgACAAcACAAJAAoACwAMAA0ADgAPABAAEQASABMAFAAVABYAFwAYABkAGgAbABwAHQAeAAsAHwAgACEAAgEAAgAiAAEAAQIAAgAjAAQAJAAlAAQLAAIAJgAIAAkADgAnABQAFQAWACgA'
..'GAApABoAKAAcACoAKwAsAC0ALgAvADAAJQAECwACACYACAAJAA4AMQAUABUAFgAyABgAMwAaADIAHAAqACsALAAtAC4ALwAwACUABAsAAgA0AAgACQAOADUAFAA2ABYANwAYADgAGgA5ABwAOgArADsALQA8AC8APQAlAAQLAAIANAAIAAkADgA+ABQANgAWAD8AGABA'
..'ABoAQQAcADoAKwA7AC0APAAvAD0AJQAEDAACAEIACAAJAA4AQwAQABEARAAJABYAFwAYAEUAGgBGABwARwArAEgALQBJAC8AMAAlAAQJAAIASgAIAAkADgBLABQAFQAYAEwAHABNACsATgAtAE8ALwAwACUABAsACAAJAA4AUAAQABEARAAJABYAUQAYAFIAGgBTABwA'
..'VAArAFUALQBWAC8AVwAlAAQJAAIAWAAIAAkADgBZABQAFQAYAFoAHABbACsAXAAtAF0ALwAwACUABAsAAgBeAAgACQAOAF8AFAAVABYAYAAYAGEAGgBiABwAYwArAGQALQBlAC8AMAAlAAQJAAIASgAIAAkADgBmABQAFQAYAGcAHABoACsAaQAtAGoALwAwACUABAsA'
..'AgBrAAgACQAOAGwAFAAVABYAYAAYAG0AGgBiABwAbgArAG8ALQBwAC8AMAAlAAQLAAIAcQAIAAkADgByABQANgAWAHMAGAB0ABoAdQAcAHYAKwB3AC0AeAAvAHkAJQAECwACAHoACAAJAA4AewAUABUAFgB8ABgAfQAaAH4AHAB/ACsAgAAtAIEALwCCACUABAkAAgCD'
..'AAgACQAOAIQAFAA2ABgAhQAcAIYAKwCHAC0AiAAvADAAJQAECwACAIkACAAJAA4AigAUABUAFgCLABgAjAAaAIsAHACNACsAjgAtAI8ALwAwACUABA4AAgCQAAgACQAOAJEAEAARAJIAkwBEAAkAFAAVABYAlAAYAJUAGgCWABwAlwArAJgALQCXAC8AmQAlAAQJAAIA'
..'mgAIAAkADgCbABQANgAYAJwAHACdACsAngAtAJ8ALwAwACUABAsAAgCgAAgACQAOAKEAFAAVABYAYAAYAKIAGgBiABwAowArAKQALQClAC8AMAAlAAQNAAIApgAIAAkADgCnABAAEQBEAAkAFAAVABYAqAAYAKkAGgCqABwAqwArAKwALQCtAC8ArgAlAAQLAAIArwAI'
..'AAkADgCwABQANgAWAD8AGACxABoAQQAcALIAKwCzAC0AtAAvADAABgAECwACALUACAAJAA4AtgAQABEAtwC4ABYAYAAYALkAugC4ABoAYgAcALsAHwAgACUABAsAAgC8AAgACQAOAL0AFAAVABYAYAAYAL4AGgBiABwAvwArAMAALQDBAC8AMAAlAAQLAAIAwgAIAAkA'
..'DgDDABQAFQAWAMQAGADFABoAxgAcAMcAKwDIAC0AyQAvADAAJQAECwACAEoACAAJAA4AygAUABUAFgAXABgAywAaAMwAHADNACsAzgAtAM8ALwAwANAAQANADQEGANkA2gDVANsA3ADdAAEGAN4A3wDgANsA3ADdAAEGAOEA4gDjANsA3ADdAAEGAOQA5QDVANsA3ADd'
..'AAEGAN4A5gDnANsA3ADdAAEGAOgA6QDVANsA3ADdAAEGAOoA6wDsANsA3ADdAAEGAO0A7gDvANsA3ADdAAEGAPAA8QDgANsA3ADdAAEGAPIA8wDgANsA3ADdAAEGAPQA9QDVANsA3ADdAAEGAPYA9wD4ANsA3ADdAAEGAPkA+gD7ANsA3ADdAAEGAPwA/QDVANsA3ADd'
..'AAEGAPwA/gDVANsA3ADdAAQLAAIA0QAIAAkADADSAA4A0wAQABEAEgDUABQANgAWANUAGADWABoA1wAcANgAJQAEDQACAP8ACAAJAAwAAAEOAAEBEAARABIAAgEUABUAFgADARgABAEaAAUBHAAGASsABwEtAAgBJQAEDwACAAkBCAAJAAwACgEOAAsBEAARAAwBEQAS'
..'AA0BFAAOARYADwEYABABGgARARwAEgErABMBLQAUAS8AMAAlAAQLAAIAFQEIAAkADgAWARQAFQAWAGAAGAAXARoAYgAcABgBKwAZAS0AGgEvADAAJQAEDQACAKYACAAJAA4AGwEQABEARAAJABQAFQAWAKgAGAAcARoAqgAcAKsAKwCsAC0ArQAvAK4AJQAEDQACAB0B'
..'CAAJAA4AHgEQABEARAAJABQAFQAWAB8BGAAgARoAIQEcACIBKwAjAS0AJAEvACUBJQAECwACACYBCAAJAA4AJwEUABUAFgAoARgAKQEaACoBHAArASsALAEtAC0BLwAuASUABAsAAgBKAAgACQAOAC8BFAAVABYAYAAYADABGgBiABwAMQErADIBLQAzAS8AMAAlAAQI'
..'AAIANAEIAAkADgA1ARgANgEcADcBKwA4AS0AOQEvADoBJQAEDQACADsBCAAJAA4APAEQABEARAAJABQAFQAWAD0BGAA+ARoAPwEcAEABKwBBAS0AQgEvAEMBJQAECwACAEoACAAJAA4ARAEUABUAFgBgABgARQEaAGIAHABGASsARwEtAEgBLwAwACUABA0AAgCmAAgA'
..'CQAOAEkBEAARAEQACQAUABUAFgCoABgASgEaAKoAHACrACsArAAtAK0ALwCuACUABA0AAgA7AQgACQAOAEsBEAARAEQACQAUABUAFgBMARgATQEaAE4BHABAASsAQQEtAEIBLwBDAdAAQAMABgBWAVcBxAAABgBYAVkBxAAABgBaAVsBxAAACQAIAAkADABPAQ4AUAES'
..'AFEBFABSARYAxAAYAFMBGgBUARwAVQEA')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
