-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 4348 characters

local ScriptFunctions = {
function(script,require)
-- Uniform Giver
-- Gullet
-- 2015/02/01

-- Tags --

local pantsId = script.Parent.Parent.Coathanger.Pants.PantsTemplate
local shirtId = script.Parent.Parent.Coathanger.Shirt.ShirtTemplate
local cPart = script.Parent
local cDetector = script.Parent.ClickDetector




-- Functions --

local function playSoundLocal(sId,sParent)
	local sound = Instance.new("Sound",sParent)
	sound.SoundId = "http://www.roblox.com/asset/?id="..sId
	sound:Play()
	sound:Destroy()
end

local function onClicked(player)
	print(player.Name.." clicked on Uniform Giver")
	
	playSoundLocal(152206246,player)	-- Declaring the sound ID and Parent
	
	
	
	
	local foundShirt = player.Character:FindFirstChild("Shirt") -- Tries to find Shirt
	if not foundShirt then -- if there is no shirt
		print("No shirt found, creating for "..player.Name)
		local newShirt = Instance.new("Shirt",player.Character)
		newShirt.Name = "Shirt"
	else if foundShirt then -- if there is a shirt
		print("Shirt found, reconstructing for "..player.Name)
		player.Character.Shirt:remove()
		local newShirt = Instance.new("Shirt",player.Character)
		newShirt.Name = "Shirt"
	end
	end
	
	
	
	
	local foundPants = player.Character:FindFirstChild("Pants") -- Tries to find Pants
	if not foundPants then -- if there are no pants
		print("No pants found, creating for "..player.Name)
		local newPants = Instance.new("Pants",player.Character)
		newPants.Name = "Pants"
	else if foundPants then -- if there are pants
		print("Pants found, reconstructing for "..player.Name)
		player.Character.Pants:remove()
		local newPants = Instance.new("Pants",player.Character)
		newPants.Name = "Pants"
	end
	end
	
	player.Character.Shirt.ShirtTemplate = shirtId
	player.Character.Pants.PantsTemplate = pantsId
	end




local function onHoverEnter(player)
	cPart.Transparency = .1
	cPart.BrickColor = BrickColor.White()
end



local function onHoverLeave(player)
	cPart.BrickColor = BrickColor.Gray()
	cPart.Transparency = .2
end


-- Binds --

cDetector.MouseHoverEnter:connect(onHoverEnter)
cDetector.MouseHoverLeave:connect(onHoverLeave)
cDetector.MouseClick:connect(onClicked)




end,
function(script,require)
--[[
	
	This model was made by Gullet
	
	To change the shirt and pants go to 
	=> Uniform Giver => Coathanger => Shirt/Pants
	and change the Templates, I hope you enjoy
	
	http://www.roblox.com/asset/?id=303225003
	
	Example: http://www.roblox.com/asset/?id=211144184
	You can upload decals and use the URL numbers if you've used roblox Shirt/Pants template
	
--]]
end,
function(script,require)
function onTouched(hit)
	if hit.Parent:findFirstChild("Humanoid") ~= nil and hit.Parent:findFirstChild("Top") == nil then
		local g = script.Parent.Parent.Top:clone()
		g.Parent = hit.Parent
		local C = g:GetChildren()
		for i=1, #C do
			if C[i].className == "Part" or C[i].className == "UnionOperation" or C[i].className == "MeshPart" then
				local W = Instance.new("Weld")
				W.Part0 = g.Middle
				W.Part1 = C[i]
				local CJ = CFrame.new(g.Middle.Position)
				local C0 = g.Middle.CFrame:inverse()*CJ
				local C1 = C[i].CFrame:inverse()*CJ
				W.C0 = C0
				W.C1 = C1
				W.Parent = g.Middle
			end
				local Y = Instance.new("Weld")
				Y.Part0 = hit.Parent.Head
				Y.Part1 = g.Middle
				Y.C0 = CFrame.new(0, 0, 0)
				Y.Parent = Y.Part0
		end

		local h = g:GetChildren()
		for i = 1, # h do
			h[i].Anchored = false
			h[i].CanCollide = false
		end
		hit.Parent.Saude.Protecao.HelmetProtect.Value = 100
		hit.Parent.Saude.Protecao.HelmetVida.Value = 200
	end
end

script.Parent.Touched:connect(onTouched)
end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end
function RunScripts()
    for script, index in pairs(Scripts) do
        coroutine.wrap(function()
            ScriptFunctions[index](script, require)
        end)()
    end
end
local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AADkIQVNb2RlbCEETmFtZSEQRnJlbmNoIHd3MSAoQWNzKSEKV29ybGRQaXZvdATAwcIhBkZyZW5jaATDxMUhDUNoYW9zIFVuaWZvcm0hBFBhcnQhCUNsaWNrUGFydCEIQW5jaG9yZWQiIQ1Cb3R0b21TdXJmYWNlAwAAAAAAAAAAIQZDRnJhbWUEFMTFIQtPcmllbnRh'
..'dGlvbgoAAAAAAAA0wwAAAAAhCFBvc2l0aW9uCoLDkkI0zA0/VlagQSEIUm90YXRpb24KAAA0wwAAAAAAADRDIQRTaXplCgAAgEAAAIA/AABAQCEKVG9wU3VyZmFjZSEMVHJhbnNwYXJlbmN5AwAAAACambk/IQ1DbGlja0RldGVjdG9yIRVNYXhBY3RpdmF0aW9uRGlz'
..'dGFuY2UDAAAAAAAAJEAhBlNjcmlwdCEKU3VyZmFjZUd1aSEFRnJhbWUhEEJhY2tncm91bmRDb2xvcjMG////IRZCYWNrZ3JvdW5kVHJhbnNwYXJlbmN5AwAAAAAAAPA/IQ9Cb3JkZXJTaXplUGl4ZWwMAACAPwAAAACAPwAAIQpJbWFnZUxhYmVsDAAAAD+1/wAAAABB'
..'AAwAAAAAyAAAAAAA9AEhBUltYWdlIShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTQzNTU2ODkxIQpDb2F0aGFuZ2VyBMbHyCEESGVhZCEKQnJpY2tDb2xvcgfqAwQ3ycohCkNhbkNvbGxpZGUCIQVDb2xvcgbNzc0KfMOSQhe5sUCGVqBBCgAANEMAAAAA'
..'AAA0wwoAAABAAACAPwAAgD8hC1NwZWNpYWxNZXNoIQVTY2FsZQoAAKA/AACgPwAAoD8hCVJpZ2h0IEFybQRAy8wKj8L1vdcjLkOF6wFACpLDj0IluYFAUlagQQpI4TPDH4W7QHH9McMKAACAPwAAAEAAAIA/IQVUb3JzbwRGx8gKAAAAAB+FL0MAAAAACoLDkkIyuYFA'
..'glagQQoAADRDKVyPQAAANEMKAAAAQAAAAEAAAIA/IQVEZWNhbCEGcm9ibG94IQhMZWZ0IEFybQROzc4KrkfRQIVrMEOkcL3ACrSqlUIzWYJA8vOhQQozcy1DMzNjQHF9LkMhCExlZnQgTGVnBFPP0ApSuA5APcoxQ+xRuL0KfMOTQsdyA0CCVqBBCh/FMUPNzAxAAAA0'
..'wyEJUmlnaHQgTGVnBFjR0gr2KGzApPAtw65HgUAKeouRQtxyBEB6Wp9BCj1KMMOamcHA7JEvwyEISHVtYW5vaWQhBkhlYWx0aCEJTWF4SGVhbHRoIQlXYWxrU3BlZWQhBVNoaXJ0IQ1TaGlydFRlbXBsYXRlISpodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lk'
..'PTM3MTA1MDUyNDQhBVBhbnRzIQ1QYW50c1RlbXBsYXRlISpodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTM3MTA1MDYzMjkhC0xvY2FsU2NyaXB0IQdSRUFEIE1FIQhEaXNhYmxlZCEFU3RhbmQE08TFIQ5Vbmlvbk9wZXJhdGlvbgfCAARvxMUGo6KlIQhN'
..'YXRlcmlhbAMAAAAAAACRQApyw5JCrXIjQJpWkEEKAQCAQAIAoEAAAIA/IQlXZWRnZVBhcnQKcsOVQq9yA0CaVpBBCgAAAAAAALTCAAAAAAoAAABAAACAQAAAgD8KcsOSQq9yQ0CaVpBBCnLDj0KvcgNAmlaQQQoAAAAAAAC0QgAAAAAKAACAQAAAgD8AAIA/CnLDkkK8'
..'yg0/mlaQQQR9xNQDAAAAAACAkEAKAAC0QgAANMMAAAAACkyQk0ILuZFApiOZQQoAALRCAAAAAAAANEMKmpmZPwAAAEAAAIA/IQxDeWxpbmRlck1lc2gKAACAPwAAgD/NzEw+BIPE1Aqs9pFCC7mRQJojmUEEhcTFCoLDkkINuZFAqiGdQQqamZk/mpkZP5qZGT8hBkhl'
..'bG1ldATV1tchBUdpdmVyB/UDBI7W1wYEr+wDAAAAAACAlEAKal6cQsTeZD+wC6ZBCtDX2T+Qmbk/ZpjKPyEDVG9wBNjZ2iEGTWlkZGxlBwYEBJfb3Ab/zJkKCtcjPAAANMMAAAAACmxenEKI1A0/jrqlQQpx/TNDAAAAAAAANEMhCkF0dGFjaG1lbnQhDkhhaXJBdHRh'
..'Y2htZW50BJzd3goAAAAAmpkZPwAAAAAhDUhhdEF0dGFjaG1lbnQhE0ZhY2VGcm9udEF0dGFjaG1lbnQEoN3eCgAAAAAAAAAAmpkZvyEURmFjZUNlbnRlckF0dGFjaG1lbnQEo9naCmlenEIgb5I/8s6lQQr//78/AADAPzMz0z8hC1N0cmluZ1ZhbHVlIRNBdmF0YXJQ'
..'YXJ0U2NhbGVUeXBlIQVWYWx1ZSEHQ2xhc3NpYwSr3+AKHOLVKEZ2Qyp/IPK0CgAAAABAM7M+7LfnvCEMVmVjdG9yM1ZhbHVlIQxPcmlnaW5hbFNpemUKAADAPwAAwD8AAOA/Cv//fz8AAIA/ll9xPyEGTWVzaElkIRdyYnhhc3NldGlkOi8vMzcwOTYxMjAwMSEJVGV4'
..'dHVyZUlkISpodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTM2Nzk1NzczODMhCE1lc2hUeXBlAwAAAAAAABRAIQZDYW1lcmEhD1RodW1ibmFpbENhbWVyYQTh4uMhE0RpYWdvbmFsRmllbGRPZlZpZXcDAAAAQNCtPUAhC0ZpZWxkT2ZWaWV3AwAAAAAAAERA'
..'IQVGb2N1cwTk3d4hEk1heEF4aXNGaWVsZE9mVmlldwq7e5ZCiXJDQISYnEEKAACAv/gTHycAAICqCggUH6cAAIA/VRa7kQqAwZJCinJDQHhWnEEKAACAv/wTnycAAACrCgQUn6cAAIA/9RuhkgpWy5JCbvBhQGNZoEEKbjd/v0z1KbZ6GqC9ChOytLQAAIA/kcDrtwoA'
..'AIC//wAALwAAAKsKMf3/LgAAgD///+u3CjWBfr9p7BA9INHQvQrEQw890NZ/P2uovDsKjlN+v6nf0b0JD069CqVgxL3W+nw/jpP0vQp8z3+/o5LEuth2Hb0KfREcNSjOfz8nux+9CpDQfb974o892fHgPQqHQZ099NV+P9TyZj0KcsOSQq1yI0AgvZZBCgAAAKvr/5G1'
..'AACAvwpsXpxCaFp5P8QHpkEK9P+/KiEaDJLw/38/Cvmdbqfw/38///47kgpoXpxCdFl5P//OpUEKAACAvxdEm7jHVAY2CkpEm7jw/38/9u8huQoAAIC/UUibuOdUBjYKhEibuPD/fz/27yG5CgAAgD8AAAAAAAAAAAoAAAAAAACAPwAAAAAKAACAP606B7JKVVqnCq06'
..'BzIAAIA/7ejuJQpIYyxANwAhQMXZ1UEK0wjFPgAAAIDUSGw/Cn+dvz7ZAmo/DskfvgrwMIxALjPaP+M40EEuAQACAAIDBAUBAQIAAgYEBwECAgACCAQHCQMKAAIKCwwNDg8QERITFBUWFxgZDhobHAQBAB0eHwQAACAEAAAhBwQAIiMkJSYOFycoCAUAIiMkJRMpFyor'
..'LAEDAgACLQQuCQoNAAIvCwwNDjAxDzIzNDU2ERITNxU4FzkZDholOgsBADs8CQoLAAI9CwwNDjAxDz41NhE/E0AVQRdCGQ4JCgsAAkMLDA0OMDEPRDU2EUUTRhVHF0gZDkkOAQACSgkKCwACSwsMDQ4wMQ9MNTYRTRNOFU8XQhkOCQoLAAJQCwwNDjAxD1E1NhFSE1MV'
..'VBdCGQ4JCgsAAlULDA0OMDEPVjU2EVcTWBVZF0IZDloKAwBbDlwOXQ5eCgIAAl5fYGEKAgACYWJjZAMCAAJlZgwBAwIAAmcEaGlABABxQnJzAAl0dRIAcUJ2dwAJeHkSFwkACwwwag9rNWxtbhESE28VFhdwCRcJAAsMDQ4Pem17EXwTfRV+F38ZDoAZAQA7gQkXCQAL'
..'DA0OD4JtexF8E4MVfhd/GQ6AGwEAO4EJFwgACwwNDg+EERIThRUWF4YZDgEBAgAChwSIAR4CAAKHBIgJHw4AAokLDA0OMIoPizM0NYxtjRFzE44VcxePGQ4aJR8gAQACLwEfAgACkASRCSIMAAKSCwwwkw+UNZVtjRGWE5cVmBc5GQ4aJTojAQA7PJkjAwACmg+bE5yZ'
..'IwMAAp0PmxOcmSMDAAKeD58ToJkjAQACoQkiCwAChwsMDQ4PojM0bY0RlhOjFZgXpBkOpSkCAAKmp6iZKQQAAp0PqRGqE6usKQIAAq2nrjopBQACOjuvsLGys7S1th4GAAK3D7i5uru8vb6/vAA=')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
