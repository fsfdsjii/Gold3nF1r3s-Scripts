-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 11568 characters

local ScriptFunctions = {
function(script,require)
--Made by xImmortalChaos for Site-40.

local Door = script.Parent.Door
local Door2 = script.Parent.Door2
local Button1 = script.Parent.Button1
local Button2 = script.Parent.Button2
local Open = false

local OpenSound = Door.DoorOpen
local CloseSound = Door.DoorClose

local Debounce = false
function Triggered(Player)
	if Player.Character == nil then return end
	if Player.Character:FindFirstChild("User Setup") == nil then return end
	if Player.Character:FindFirstChild("AccessLevel").Value < 0 then 
		Door.AccessDenied:Play()
		return end
	if Debounce == true then return end
	Debounce = true
	OpenSound:Play()
	spawn(function()
		for i = 3,(Door.Size.z / 0.15) do
			Door.CFrame = Door.CFrame - (Door.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	spawn(function()
		for i = 3,(Door2.Size.z / 0.15) do
			Door2.CFrame = Door2.CFrame - (Door2.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	wait(15)
	CloseSound:Play()
	--Door.Transparency = 0
	for i,v in pairs(Door:GetChildren()) do
		if v:IsA("Decal") then
			v.Transparency = 0
		end
	end
	spawn(function()
		for i = 3,(Door.Size.z / 0.15)  do
			Door.CFrame = Door.CFrame + (Door.CFrame.lookVector * 0.15)

			wait()
		end
	end)

	spawn(function()
		for i = 3,(Door2.Size.z / 0.15) do
			Door2.CFrame = Door2.CFrame + (Door2.CFrame.lookVector * 0.15)

			wait()
		end
	end)
	--Door.Transparency = 1
	for i,v in pairs(Door:GetChildren()) do
		if v:IsA("Decal") then
			v.Transparency = 1
		end
	end
	wait(0.4)
	Debounce = false
end
Button1.ProximityPrompt.Triggered:connect(Triggered)
Button2.ProximityPrompt.Triggered:connect(Triggered)

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script,index in pairs(Scripts) do
		coroutine.wrap(ScriptFunctions[index])(script,require)
	end
end


local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEDkASEFTW9kZWwhBE5hbWUhDExldmVsIDAgZG9vciEKV29ybGRQaXZvdASiAaMBpAEhBERvb3IEogGlAaYBIRJTY3JpcHRlZENvbXBvbmVudHMEpwGoAakBIQZTY3JpcHQhBE1haW4hDlVuaW9uT3BlcmF0aW9uIQVEb29yMiEIQW5jaG9yZWQiIQpCcmlja0NvbG9y'
..'B8IAIQZDRnJhbWUEHQCoAakBIQpDYW5Db2xsaWRlAiEFQ29sb3IGo6KlIQhNYXRlcmlhbAMAAAAAAICJQCELT3JpZW50YXRpb24KAAAAAB8FtMKPwvU8IQhQb3NpdGlvbgpubm5D1ETHPzGwI8MhCFJvdGF0aW9uCo/C9bwAALTCAAAAACEEU2l6ZQrNzEw9tLNHPyXZ'
..'Dz8hDFRyYW5zcGFyZW5jeQMAAAAAAADwPyEEUGFydAoea6Y8GGumPKnT8T4KE2tuQ4+klj/msiPDCgxY2DxV/Og8pnQNPQryhG5DdQKlP9+xI8MKHmumPCVxRz8fa6Y8Cp2pbkMeVcc/8bIjwwoUa25DyonEP/OyI8MK84RuQ56B4j/wsSPDCntYbkMiRaU/4bEjwwoT'
..'a25DMmqnP+uyI8MKFGtuQ0jQ9T8BsyPDCnxYbkPbHeI/8rEjwwp8WG5D9YXCP+mxI8MKFGtuQ4WF5D/8siPDCg8tbkNwVcc/97IjwwpFva483U9HP/C0BT8KXGluQ1dNxz+frSPDCgAAAADh+rNCj8L1vAqX6WE9zSXPPXASgzoKCG9uQ83p+z8zqiPDCo/C9Tzh+jND'
..'AAA0wwMAAAAAAAAYQAoAAIA/AACAPwAAgD8KAAAAAAAAAAAAAAAACpDAzTwMOAs+bxKDOgodam5D9EvnPy6qI8MKj8L1POH6M0O43ixDCvQSAj5V26I8cBKDOgqAb25DumnePyuqI8MKj8L1POH6M0PherfCCheQ2D0TokM8bxKDOgofbW5DkdjjPy2qI8MKj8L1POH6'
..'M0MfBbZCCgx8gz7b2nI7bxKDOgrxbW5DqAv7PzOqI8MKmcDNPAo4Cz5vEoM6CulxbkNkgdk/KaojwwqPwvU84fozQ65Hgb8K8hICPl7bojxwEoM6CnNubkNEoOI/LKojwwqPwvU84fozQ67HvEIKEZDYPSCiQzxvEoM6CqhvbkPZGN0/KqojwwqPwvU84fozQ1K4pcIK'
..'CnyDPuDacjtvEoM6CqVobkMqhcM/JKojwwofH1E9/JSTPeGAhD8KuWxuQ9I81z+/rCPDCgAAtMLh+jNDAAAAAAMAAAAAAAAQQAon8no9GQiFOuGAhD8KuWxuQ+A81z8mqiPDCt5qszwfCAU73KZoPgoEYG5DNsbSPxKqI8MK4fqxQpqZs8KambPCCg2gLD0fCAU7U87x'
..'PQoaeG5DzJGlPxCqI8MKmhmGQuH6s0Lh+rNCCuifLD0fCAU7gc7xPQpmbm5DGGgBQBOqI8MKSGGWwj0KtMLh+rPCCv1n+j00g409w0pDPwrjbG5DNAjUPx2uI8MK4fqxwmZmtEKambNCCjyE/z2L/Jg7wUpDPwrjbG5DOwjUP2iqI8MKqrIfPi2MRzsgnIM/CuVpbkNI'
..'Pt0/q6ojwwqYb1w/R4ONPRjY3T0KbmxuQzhz1T/rrCPDCgrXQ0A9CrTCAAC0wgpNnFg8NAgFO1X3XjwK42huQ0biCEAUqiPDCuzRn8JcD7TC4fqzwgo05PE8NAgFO8qpxzsKzXNuQxtQ+z8SqiPDCh+FS8E9CrTCAAC0wgpFx187MggFO7TMOD4KuG9uQwW8A0ATqiPD'
..'CkhhmMJcD7TC4fqzwgoOaPo9R4ONPcZKQz8KNXNuQ7YBuj/qrCPDCnG9pUKF67NCw/WzQgrqFHg8NAgFO1uuQjwKGWBuQ1PXyD8TqiPDCjOzr0KF67PCSOGzwgoQWt48NAgFO4E12TsKUV5uQ+QG3T8TqiPDCuxR+EHD9bNCAAC0QgoG5387MggFO+yZIT4KPF1uQxZH'
..'0j8TqiPDClyPrkIp3LNCZuazQgoSaPo9OIONPbxKQz8K7WxuQ7EI1D+pqyPDCuH6scJxPbRCcb2zQgolavo9SoONPR9JQz8KFWxuQyYuvD/6rCPDCuH6scIp3LtCuB6sQgrkFng8NggFO8usQjwKy3puQ/8krD8WqiPDCmZmn8JxvbRCUjizQgofWd48NggFO2s22TsK'
..'13ZuQ2QJmD8JqiPDCo/CHMLXI7TC7NGzwgoE6X87NQgFO6aYIT4K9XpuQ7eZoj8QqiPDCvYoqcKkcLVCH4WyQgo9qDo+RuycP7Mz4zwKO3tuQ3PG+T8uqyPDCgrXIzzh+jNDAAA0wwo+qDo+SOycP5gz4zwK/VxuQzHG+T83qyPDCo/C9Txx/TNDAAA0wwofH1E97JST'
..'PeSAhD8KlmtuQ3s81z/ArCPDCgAAtMJx/TNDAAAAAAon8no9CwiFOuOAhD8KlmtuQ4k81z8nqiPDCt9qszwSCAU73qZoPgrhXm5D3cXSPxKqI8MK4fqxQj2Ks8I9irPCChGgLD0SCAU7U87xPQr4dm5DeZGlPxGqI8MK6p8sPRIIBTuGzvE9CkNtbkPtZwFAFKojwwpI'
..'YZbCHwW0wsP1s8IK/mf6PSeDjT3FSkM/CsBrbkPdB9Q/Hq4jwwrh+rHCw3W0Qj2Ks0IKPoT/PX38mDvFSkM/CsBrbkPlB9Q/aaojwwqtsh8+GoxHOyKcgz8KwmhuQ/E93T+sqiPDCplvXD85g409GdjdPQpLa25D43LVP+ysI8MKCtdDQB8FtMIAALTCClKcWDwkCAU7'
..'WPdePArAZ25DHOIIQBWqI8MK7NGfwlwPtMLD9bPCCjPk8TwkCAU70qnHOwqqcm5Dyk/7PxOqI8MKH4VLwR8FtMIAALTCCkfHXzskCAU7tsw4PgqVbm5D3LsDQBSqI8MKSGGYwj0KtMLh+rPCChVo+j05g409yEpDPwoScm5DYAG6P+usI8MKcb2lQqTws0LD9bNCCvEU'
..'eDwkCAU7Xq5CPAr2Xm5D+dbIPxSqI8MKM7OvQkjhs8Ip3LPCChha3jwkCAU7gjXZOwouXW5DigbdPxSqI8MK7FH4QeH6s0IAALRCCg7nfzskCAU77JkhPgoZXG5Du0bSPxSqI8MKXI+uQincs0JI4bNCChRo+j0qg409vUpDPwrKa25DWwjUP6qrI8MK4fqxws1MtEIU'
..'rrNCCiZq+j06g409I0lDPwrzam5Dzi28P/qsI8MK4fqxwoXru0JcD6xCCuQWeDwoCAU7z6xCPAqpeW5DrCSsPxeqI8MKZmafwo/CtEJSOLNCCiNZ3jwoCAU7ajbZOwq1dW5DDwmYPwqqI8MKCOl/OycIBTummCE+CtN5bkNjmaI/Eaojwwr2KKnCw3W1Qh+FskIKnulh'
..'PdUlzz1wEoM6CkFpbkPdxv8/NqojwwqXwM08EDgLPm8SgzoKv2ZuQ+hO5z8vqiPDCo/C9Txx/TNDuN4sQwr5EgI+W9uiPHASgzoKImxuQ65s3j8sqiPDCo/C9Txx/TND4Xq3wgodkNg9G6JDPG8SgzoKwWluQ4Xb4z8uqiPDCo/C9Txx/TNDHwW2QgoPfIM+5NpyO28S'
..'gzoKkmpuQ5wO+z80qiPDCgsjNT5WI548cBKDOgqvbG5Dni3ePy6qI8MKj8L1PHH9M0O4HrrCCh6iwzwfkNg9cBKDOgrBam5DRnPJPyiqI8MKj8L1PHH9M0OuR4E/ChX+dTx8Oqw9cBKDOgrua25DvNnRPyqqI8MKj8L1PHH9M0MU7jDDCqnbMD7HjLQ7bxKDOgrgcG5D'
..'W3HCPyWqI8MKj8L1PHH9M0NxPcbCCkjTZD1B02Q9HmumPApsrm5DKk/IP72tI8MKj8L1vArXI7wAAAAACgAAgD8AAIA/zczMPQq6nRE9LqpgPYVO8TwKkKtuQ3UJ7T/PsSPDClesbkOAX8g/B7Ijwwozr25D51GjP7OtI8MKpK1uQx/57D+FrSPDCh+tbkNAYqM//bEj'
..'wyEFU291bmQhDEFjY2Vzc0RlbmllZCEHU291bmRJZCEWcmJ4YXNzZXRpZDovLzIwMDg4ODUxMCENQWNjZXNzR3JhbnRlZCEWcmJ4YXNzZXRpZDovLzIwMDg4ODQ2OCEJRG9vckNsb3NlIRZyYnhhc3NldGlkOi8vMjU3ODQxNjQwIQhEb29yT3BlbiEWcmJ4YXNzZXRp'
..'ZDovLzI1MTg4NTQ5NSEITWVzaFBhcnQhB0J1dHRvbjIH6wMEBAGqAasBBhEREQMAAAAAAABxQAqPwvU8cf0zQwAAAAAKWqZvQ4pXXUB38CLDClL4M0MK1yM8AAA0wwq8vF8/taOtPwChYD8hBk1lc2hJZCEXcmJ4YXNzZXRpZDovLzMyMTMyMjAzNTYhCE1lc2hTaXpl'
..'Ckropj5WuQA/H4amPiEJVGV4dHVyZUlEIRdyYnhhc3NldGlkOi8vMjQ1OTkzMDY5NiEPUHJveGltaXR5UHJvbXB0IQxIb2xkRHVyYXRpb24DAAAAoJmZyT8hD0tleWJvYXJkS2V5Q29kZQMAAAAAAIBZQCEKT2JqZWN0VGV4dCEHQnV0dG9uMQQVAawBrQEKdCZpQ1xL'
..'XUBqiiTDB2cABBsBrgGvAQbKyLYDAAAAAAAAkUAKAAAAAAAAtMIAAAAACgKAbENpvGRAKbwjwwrdx8U+VpbZQDzEjkAhElJvbGxPZmZNYXhEaXN0YW5jZQMAAAAAAABZQCEXcmJ4YXNzZXRpZDovLzUwOTY5ODYxNDUhBlZvbHVtZQMAAAAAAAAIQCENUGxheWJhY2tT'
..'cGVlZAMAAABgZmbyPyEOV2VsZENvbnN0cmFpbnQhBVBhcnQwIQVQYXJ0MSEFRnJhbWUEsAGlAaYBIQtCYWNrU3VyZmFjZQMAAAAAAAAkQCENQm90dG9tU3VyZmFjZQMAAAAAAAAAAAQxAbEBsgEhDEZyb250U3VyZmFjZSELTGVmdFN1cmZhY2UKAAAAAAAAAAAAALTC'
..'CsaBbEPxW99AQNUjwyEMUmlnaHRTdXJmYWNlCn0/NT7jpY9AAACAPyEKVG9wU3VyZmFjZQQ3AaUBpgEKAAAAAAAANMMAAAAACgZ8bEMAarU9WtYjwwoAADTDAAAAAAAANMMKx0uXQH0/NT4AAIA/IQRXZWxkIQJDMASzAbQBtQEhAkMxBLYBtwG4AQRAAbkBugEKyCZq'
..'Q7YeXUCM1iPDChkElj62Ht1AAACAPwS7AbwBvQEEvgG/AcABBMEBwgHDAQRGAbkBugEK+NluQxR7XECO1iPDChkElj7detxAAACAPwTEAb8BwAEExQG0Ab0BBMYBxwHIAQTJAcIBwwEhCVdlZGdlUGFydARPAcoBywEKmpkPQgAAtEIAALTCCuzQbkNpvtxA7VUkwwoA'
..'ALRCZmZYQgAANMMKzcxMPs3MTD3/0Zs+IQtTcGVjaWFsTWVzaCEFU2NhbGUKAACAPwFAzj0AAIA/IQhNZXNoVHlwZQMAAAAAAAAAQARZAcwBzQEKmpkPwvaoscK4nrJCCurQbkPpvtxAjVYjwwqPwrDC7FFYwhSupz8KzcxMPs3MTD1ozJs+CgAAgD+cOM49AACAPwRf'
..'Ac4BzwEKAAAAAAAAAACaGRBDCuzQbkOZvtxA7dUjwwrd0Zs+zcxMPsa1fj8EYwHQAdEBCkjh/EEAALTCHwW0QgqoL2pDEe7cQONVJMMK4fqzQlyPacIAADTDCs3MTD7NzEw9UsqaPgoAAIA/ASDVPQAAgD8EaQHSAdMBCgrXIzxx/TNDUjjzwgqmL2pDte7cQONVI8MK'
..'cf0zQwrXIzxcj2lCCs3MTD5zypo+zcxMPQoAAIA/AACAP5TG0j0EbwHUAdUBCgAAAAAAAAAA12MUwwqoL2pDae7cQOPVI8MKc8qaPs3MTD4Yq34/IQRzaWduBHMB1gGrAQpmKmlDkvZLQOLjJMMKSi0aP7A8ED9Zr6s9IRdyYnhhc3NldGlkOi8vMzIxMzIxODEzNAp0'
..'l2Q+rdpVPtCM/jwhF3JieGFzc2V0aWQ6Ly8zMjEzMjEzMTEwBHkB1wGtAQpkom9D9ghMQO+WIsMhBkZvbGRlciEJRG9vclBhcnRzIQZTdHJpcGUH6QMEgAHYAdkBBv//6Qq6XmtDYpHNQCq8I8MKI1rkPs3MTD4y3QxABNoBtAG9AQTbAdwB3QEHxwAEhwHeAd8BBmNf'
..'YgoCgGxDNYlxQCm8I8MKGQQWPwAAAD+DwI5ABxoABIwB4AHfAQYbKjUK+e1tQzWJcUBxvSPDCuG6M0PD9bPCZqYzwwqd7yc/mpmZPipcDz4EkAHgAd8BCs9MbkM1iXFAcb0jwwqd7yc/mpmZPjcI7D4EkwHhAeIBCgKAbEPgTSI/ub4jwwr6ugY/XXVCP8xAfEAHQAEE'
..'mAHjAeQBBsrL0QoCgGxDhL4fPyi8I8MKABgWP2hMZj9g94FAIQxVc2VQYXJ0Q29sb3IKVkpJP9P8yz0UIndACgKAbENRi2w/KbwjwwoCgGxDHVg5Pym8I8MKAoBsQ+kkBj8pvCPDCgKAbENu46U+KbwjwwoiFxY/aExmP3D3gUAKAoBsQ4S+Hz8pvCPDCmZmbEOAM2JA'
..'cb0jwwoAAIC/ABJorAAAwK4KABJoLAAAgD8AAMCtCgAAgL8AEuis//8/rwoAEugsAACAP///P64KaGZsQ3DGY0BxvSPDCrl3TLky6g86+v9/PwrvGLA3/v9/P+npD7oKAACAvyAzrzc0fEy5ChEZsDf+/38/iOoPugoAAIA/IDOvtzV8TDkKERmwN/7/fz+H6g+6Ci/9'
..'NrMBAKAwAACAPwrxN1AuAACAP///nzAKZGZsQ4AzYkBpvSPDCofTkjUAAIC/tReZOAoAAIA/OYaSNQoHArgKAACAwwAAIEEAAIBDCgAAgL8AAAAAAAAAAAoAAAAAAAAAAAAAgD8KLrn2wuHQCD6t98zDCpmFTDm/8Q86/v9/vwoAAIC/bDOvt7CITLkKAACAv3C/fC//'
..'/z+vCnq7hy8AAIA//X/YMQp9P7U946UPwAAAAD8KAAAAAAAAAAAAAIC/CgAAAAAAAIA/AAAAAAoAUOO9PvBbQABVAb8KxAYCOHcambgLAIA/CgAAgL9wg5I12AYCOAqyY/vCnOZOwMj3zMMKmYVMOSzyDzr+/3+/CgAAgL/oMq+3r4hMuQrw2JJAEZRcQIBTAb8KzczM'
..'PLSzx74l2Y++CgB+Dj4mzxHAAEIzvgp6eEy5nOoPugoAgD8Kwxiwt/L/fz9X6g86ClD98cLLQk7AyPfMwwoHIRa/nFtPv9ZRYbgKBwoQOJfjLTj9/3+/CgchFj+cW08/RrFhOAqf+Vq81qAfPAf3f78K4VtPv6kgFj+Id4G3CqkgFr/gW0+/R9elOAodMAa/SwNaP20h'
..'PrkKN4MQOKoFSbn9/3+/ChswBj9KA1q/xCg8OQpLA1q/HDAGv8pN+LgKXwNav/0vBr/C24w4Cv4vBj9eA1q/9aY6OAoAAIA/IDOvtzR8TDkKAACAvyAzrzcvfEy5Ci4NL7MAAFwxAACAPwr3Gw4vAACAPwAAXDEKcGLGPupAYsAAKxa+CgCAyT76F83AgAmLPwoAAIC/'
..'YAAALgAAgK0KYAAALgAAgD+Y/wksCjBtJLP//8cxAACAPwr3JIEvAACAPwAAyDEKMG0kswAAyDEAAIA/Ci6NI7MAANIxAACAPwr3LogvAACAPwAA0jEKMH0jswEA0jEAAIA/Cvctii8AAIA/AADQMTcBAAACAAIAAwAEAAUAAQABAgACAAYABAAHAAEAAgIAAgAIAAQA'
..'CQAKAAMBAAIACwAMAEAEQAwAJAAlACYAGwAAJAAnACgAGwAAJAApACoAGwAAJAAlACsAGwAAJAAnACwAGwAAJAAnAC0AGwAAJAAlAC4AGwAAJAAlAC8AGwAAJAAnADAAGwAAJAAnADEAGwAAJAAlADIAGwAAJAApADMAGwAAJAA0ADUANgBAAkACQAJAAoEkADcAOAA5'
..'ADoAOwA8AEACQAOBJAA9AD4APwA6ADsAPACBJABAAEEAQgA6ADsAPAABJABDAEQARQA6ADsAPAABJABGAEcARQA6ADsAPABAAkADgSQASABJAEoAOgA7ADwAgSQASwBMAE0AOgA7ADwAASQATgBPAFAAOgA7ADwAASQAUQBSAFAAOgA7ADwAQAJAAkACgSQAUwBUAFUA'
..'VgA7ADwAASQAVwBYAFUAVgA7ADwAQANAAkAEgSQAWQBaAFsAOgA7ADwAgSQAXABdAF4AOgA7ADwAgSQAXwBgAGEAOgA7ADwAQAKBJABiAGMAZABWADsAPAABJABlAGYAZABWADsAPACBJABnAGgAZAA6ADsAPABAA0ACgSQAaQBqAGsAVgA7ADwAQAJAAgEkAGwAbQBu'
..'ADoAOwA8AAEkAG8AcABxADoAOwA8AAEkAHIAcwB0ADoAOwA8AEACgSQAdQB2AHcAVgA7ADwAQAJAAgEkAHgAeQB6ADoAOwA8AAEkAHsAfAB9ADoAOwA8AAEkAH4AfwCAADoAOwA8AIEkAIEAggCDAFYAOwA8AEACgSQAhACFAIYAVgA7ADwAQAJAAgEkAIcAiACJADoA'
..'OwA8AAEkAIoAiwCMADoAOwA8AAEkAI0AjgCPADoAOwA8AIEkAJAAkQCSADoAOwA8AEACQAKBJACTAJQAlQA6ADsAPABAAkACgSQAlgCXAJgAVgA7ADwAASQAmQCaAJgAVgA7ADwAQANAAkAEgSQAmwCcAJ0AOgA7ADwAgSQAngCfAF4AOgA7ADwAgSQAoAChAKIAOgA7'
..'ADwAQAKBJACjAKQApQBWADsAPAABJACmAKcApQBWADsAPACBJACoAKkApQA6ADsAPABAA0ACgSQAqgCrAKwAVgA7ADwAQAJAAgEkAK0ArgCvADoAOwA8AAEkALAAsQCyADoAOwA8AAEkALMAtAC1ADoAOwA8AEACgSQAtgC3ALgAVgA7ADwAQAJAAgEkALkAugC7ADoA'
..'OwA8AAEkALwAvQC+ADoAOwA8AAEkAL8AwADBADoAOwA8AIEkAMIAwwDEAFYAOwA8AEACgSQAxQDGAMcAVgA7ADwAQAJAAgEkAMgAyQDKADoAOwA8AAEkAMsAzACMADoAOwA8AAEkAM0AzgDPADoAOwA8AEACQAKBJADQANEAlQA6ADsAPABAAkADgSQA0gDTANQAOgA7'
..'ADwAgSQA1QDWANcAOgA7ADwAASQA2ADZANoAOgA7ADwAASQA2wDcANoAOgA7ADwAQAJAA4EkAN0A3gDfADoAOwA8AIEkAOAA4QDiADoAOwA8AAEkAOMA5ADlADoAOwA8AAEkAOYA5wDoADoAOwA8AEAGASQA6QDqAOsAOgDsADwAACQA7QDuABsAACQA7QDvABsAASQA'
..'6QDwAOsAOgDsADwAASQA6QDxAOsAOgDsADwAACQA7QDyABsAAwwAAgANAA4ADwAQABEAEgATABQAFQAWABcAGAAZABoAGwAcAB0AHgAfACAAIQAiACMA8wAFAgACAPQA9QD2APMABQIAAgD3APUA+ADzAAUCAAIA+QD1APoA8wAFAgACAPsA9QD8AP0AAw0AAgD+AA4A'
..'DwAQAP8AEgAAARYAAQEYAAIBGgADARwABAEeAAUBIAAGAQcBCAEJAQoBCwEMAQ0BCgMADgEPARABEQESAQYA/QADDQACABMBDgAPABAA/wASABQBFgABARgAAgEaAOsAHAAVAR4A6wAgAAYBBwEIAQkBCgELAQwBDQEMAwAOAQ8BEAERARIBBgAkAAMKAAIABgAOAA8A'
..'EAAWARIAFwEWABgBGAAZARoAGgEcABsBHgAaASAAHAHzAA4DAAIA9AAdAR4B9QD2APMADgMAAgD3AB0BHgH1APgA8wAOBAACAPkAHQEeAfUAHwEgASEB8wAOBQACAPsAIgEjAR0BHgH1AB8BIAEhASQBDgAAJAEOAAAkAQ4AACQBDgAAJAEOAAAkAQ4AAAEAAgIAAgAn'
..'AQQAKAEkABkNAA4ADwApASoBKwEsARIALQEuASoBLwEqARgAGQEaADABHAAxATIBKgEeADABIAAzATQBLAEkABkNAA4ADwApASoBKwEsARIANQEuASoBLwEqARgAGQEaADYBHAA3ATIBKgEeADgBIAA5ATQBKgE6ARsCADsBPAE9AT4BJAAZDQAOAA8AKQEqASsBLAES'
..'AD8BLgEqAS8BKgEYABkBGgA2ARwAQAEyASoBHgA4ASAAQQE0ASoBOgEdAgA7AUIBPQFDAToBHQIAOwE8AT0BRAEkABkNAA4ADwApASoBKwEsARIARQEuASoBLwEqARgAGQEaADYBHABGATIBKgEeADgBIABHATQBKgE6ASACADsBQgE9AUgBOgEgAgA7AUkBPQFKAToB'
..'IAIAOwE8AT0BSwFMARkNAA4ADwApASoBKwEqARIATQEuASoBLwEqARgAGQEaAE4BHABPATIBKgEeAFABIABRATQBKgFSASQCAFMBVAFVAVYBTAEZDQAOAA8AKQEqASsBKgESAFcBLgEqAS8BKgEYABkBGgBYARwAWQEyASoBHgBaASAAWwE0ASoBUgEmAgBTAVwBVQFW'
..'ASQAGQkADgAPACsBLAESAF0BGAAZARoAXgEcAF8BHgBeASAAYAE0ASwBTAEZDQAOAA8AKQEqASsBKgESAGEBLgEqAS8BKgEYABkBGgBiARwAYwEyASoBHgBkASAAZQE0ASoBUgEpAgBTAWYBVQFWAUwBGQ0ADgAPACkBKgErASoBEgBnAS4BKgEvASoBGAAZARoAaAEc'
..'AGkBMgEqAR4AagEgAGsBNAEqAVIBKwIAUwFsAVUBVgEkABkJAA4ADwArASwBEgBtARgAGQEaAG4BHABvAR4AbgEgAHABNAEsAf0AGQ0AAgBxAQ4ADwAQAP8AEgByARYAAQEYAAIBGgDrABwAcwEeAOsAIAB0AQcBdQEJAXYBCwF3Af0AGQ0AAgBxAQ4ADwAQAP8AEgB4'
..'ARYAAQEYAAIBGgADARwAeQEeAAUBIAB0AQcBdQEJAXYBCwF3AXoBAQEAAgB7ASQAMAkAAgB8ARAAfQESAH4BFgB/ARgAGQEaABoBHACAAR4AGgEgAIEBOgExAgA7AYIBPQGDASQAMAgAEACEARIAhQEWAIYBGAAZARoAGgEcAIcBHgAaASAAiAEkADAIABAAiQESAIoB'
..'FgCLARgAGQEaABoBHACMAR4AjQEgAI4BJAAwCAAQAIkBEgCPARYAiwEYABkBGgAaARwAkAEeABoBIACRASQAMAgAEACJARIAkgEWAIsBGAAZARoAGgEcAJMBHgAaASAAlAEMAEAFgCQAmwGcARoBgCQAmwGdARoBgCQAmwGeARoBgCQAmwGfARoBACQAoAGhARoBMAkA'
..'EACVARIAlgEWAJcBGAAZARoAGgEcAJgBHgAaASAAmQGaAQ8AFhMlAQ4TJgExFCUBDhQmATcVJQEOFSYBNBYlAQ4WJgE1FyUBDhcmATYYJQEOGCYBMxwmARseJQEaHiYBHR8mAR0hJQEaISYBICIlAQUiJgEgIyYBIDImATE=')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
