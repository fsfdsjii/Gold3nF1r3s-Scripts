-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 3268 characters

local ScriptFunctions = {

	function(script,require)
		local HTTPS = game:GetService("HttpService")
		local Httplink1 = "https://raw.githubusercontent.com/goldfinder/ChatBoardV2/main/V2.MainCons"
		local Httplink2 = "https://raw.githubusercontent.com/goldfinder/ChatBoardV2/main/V2.MainBlacklisted"
		function precheck(text)
			local banlist = string.split(HTTPS:GetAsync(Httplink2,true),",")
			for i=1,#banlist do
				if text:find(banlist[i])==1 then
					return false
				end
			end
			return true
		end


		--Roblox filter, and safety extra.
		function filtertext(text,puid,issystem)
			if game:GetService("RunService"):IsStudio() then
				return text
			end
			if issystem then
				return text
			end
			local succcess,filter = pcall(function()
				return game:GetService("TextService"):FilterStringAsync(text,puid,1):GetChatForUserAsync(puid)
			end)
			if succcess then
				return filter
			else
				return "Filter Failure."
			end
		end
		local board = script.Parent.SurfaceGui.ScrollingFrame
		local selfcount = script.Parent.SurfaceGui.MSGCNT
		local plrlist = game.Players:GetChildren()
		local tweenService = game:GetService("TweenService")
		local tweenInfo = TweenInfo.new(
			5, --Time
			Enum.EasingStyle.Linear, --EasingStyle
			Enum.EasingDirection.Out, --EasingDirection
			0, --Repeat count
			false, --Reverses if true
			0 --Delay time
		)

		local messages = 1
		for i=1,#plrlist do
			plrlist[i].Chatted:Connect(function(msg)
				if precheck(msg) == false then
				else
					local f = script.MSG:Clone()
					if plrlist[i].UserId == 21490931 then
						f.Message.TextColor3 = Color3.fromRGB(0,255,0)
						f.PName.TextColor3 = Color3.fromRGB(255,204,51)
					end
					if plrlist[i].UserId == 13480417 then
						f.Message.TextColor3 = Color3.fromRGB(255,215,0)
					end
					f.Message.Text = filtertext(msg)
					f.PName.Text = plrlist[i].Name
					f.Parent=board
					messages = messages+1
					selfcount.Text = messages
					wait(55)
					local Tween = game:GetService("TweenService"):Create(f, TweenInfo.new(5), {Transparency = 0})
					Tween:Play()
					wait(5)
					f:Destroy()
				end
			end)
		end
		game.Players.PlayerAdded:Connect(function(plr)
			plr.Chatted:Connect(function(msg)
				if precheck(msg) == false then
				else
					local f = script.MSG:Clone()
					if plrlist[i].UserId == 21490931 then
						f.Message.TextColor3 = Color3.fromRGB(0,255,0)
						f.PName.TextColor3 = Color3.fromRGB(255,204,51)
					end
					if plrlist[i].UserId == 13480417 then
						f.Message.TextColor3 = Color3.fromRGB(255,215,0)
					end
					f.Message.Text = filtertext(msg)
					f.PName.Text = plrlist[i].Name
					f.Parent=board
					messages = messages+1
					selfcount.Text = messages
					wait(55)
					local Tween = game:GetService("TweenService"):Create(f, TweenInfo.new(5), {Transparency = 0})
					Tween:Play()
					wait(5)
					f:Destroy()
				end
			end)
		end)
		game.Players.PlayerRemoving:Connect(function(plr)
			local f = script.SYSTEM:Clone()
			f.Message.Text = plr.Name.." Has left the server."
			f.Message.TextColor3 = Color3.fromRGB(170, 0, 0)
			f.Parent = board
			wait(55)
			local Tween = game:GetService("TweenService"):Create(f, TweenInfo.new(5), {Transparency = 0})
			Tween:Play()
			wait(5)
			f:Destroy()
		end)
		game.Players.PlayerAdded:Connect(function(plr)
			local f = script.SYSTEM:Clone()
			f.Message.Text = plr.Name.." Has joined the server."
			f.Message.TextColor3 = Color3.fromRGB(85, 255, 0)
			f.Parent = board
			wait(55)
			local Tween = game:GetService("TweenService"):Create(f, TweenInfo.new(5), {Transparency = 0})
			Tween:Play()
			wait(5)
			f:Destroy()
		end)
	end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end

	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end
function RunScripts()
	for script, index in pairs(Scripts) do
		coroutine.wrap(function()
			ScriptFunctions[index](script, require)
		end)()
	end
end
local function Decode(str)
	local StringLength = #str

	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end

	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end

	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}

	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])

	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}

	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}

	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end

	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end

	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}

	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]

			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end

			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end

	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end

	return NoParent
end


local Objects = Decode('AACcIQVNb2RlbCEKV29ybGRQaXZvdASPkJEhBFBhcnQhCEFuY2hvcmVkIiENQm90dG9tU3VyZmFjZQMAAAAAAAAAACEKQnJpY2tDb2xvcgfHACEGQ0ZyYW1lBBKSkyEFQ29sb3IGY19iIQtPcmllbnRhdGlvbgoAAJBCAAAAAAAAAAAhCFBvc2l0aW9uCgA8AMPARNQ+'
	..'zEebwSEIUm90YXRpb24hBFNpemUKAACgPwAAwD4AAEA/IQpUb3BTdXJmYWNlBBiSkwoAPADDsAvoPlRUmsEKAADgPwAAAD4AAEA/BByUlQoAAHBCAAAAAAAAAAAKADwAw0i0jz/EtpzBBB6UlQoAPADDYLSHP3SUncEEIZaXCgAAQEIAAAAAAAAAAAoAPADDvOLQPzDn'
	..'oMEEI5aXCgA8AMOEl9s/8CigwQQmmJkKAAAQQgAAAAAAAAAACgA8AMPatAZAvBqlwQQomJkKADwAw6otDUBEhKTBBCuQmgoAAMBBAAAAAAAAAAAKADwAwxJSHUAkAKrBBC2QmgoAPADDAqEkQASYqcEEMJCbCgAAQEEAAAAAAAAAAAoAPADDB0wrQJxgr8EEMpCbCgA8'
	..'AMNEHzNAZCuvwQQ0kJEKADwAw0cGMEAAALXBBDaQkQoAPADDRwY4QAAAtcEEOJCRCgA8AMNHBjBAAIAIwgoAAKA/AADAPgAAskEEO5CRCgA8AMNHBjhAAIAIwgoAAOA/AAAAPgAAskEEPpCRCgA8AMOgDMA/AAA0wgoAAOA/AAA4QAAAAD8hBE5hbWUhBlNjcmVlbgRG'
	..'nJEhCkNhbkNvbGxpZGUCCgAAAAAAALRCAAAAAAoADADDIAPoQAAA/MEKAABwQQAACkEAAMA9IQxUcmFuc3BhcmVuY3kDAAAAAAAA8D8hClN1cmZhY2VHdWkhDlpJbmRleEJlaGF2aW9yIRBDbGlwc0Rlc2NlbmRhbnRzIQRGYWNlAwAAAAAAAABAIQ5MaWdodEluZmx1'
	..'ZW5jZSENUGl4ZWxzUGVyU3R1ZAMAAAAAAMByQCEKU2l6aW5nTW9kZSEOU2Nyb2xsaW5nRnJhbWUhBkFjdGl2ZSEQQmFja2dyb3VuZENvbG9yMwYAAAAMAACAPwAAAACAPwAAIQpDYW52YXNTaXplDAAAAAAAAAAAAEIAACESU2Nyb2xsQmFyVGhpY2tuZXNzAwAAAAAA'
	..'ADhAIQxVSUxpc3RMYXlvdXQhCVNvcnRPcmRlciEHVGV4dEJveCEGTVNHQ05UBv///ww7328/6P8AAAAAAAAMJQaBPQAAJQaBPQAAIQRGb250AwAAAAAAAAhAIQRUZXh0IQhNU0dDT1VOVCEKVGV4dENvbG9yMyEKVGV4dFNjYWxlZCEIVGV4dFNpemUDAAAAAAAALEAh'
	..'C1RleHRXcmFwcGVkIQZTY3JpcHQhBUZyYW1lIQNNU0cG/wAAIRZCYWNrZ3JvdW5kVHJhbnNwYXJlbmN5IQ9Cb3JkZXJTaXplUGl4ZWwMAACAPwAAAAAAAGQAIQVQTmFtZQwAAAA+AAAAAIA/AAAhEENsZWFyVGV4dE9uRm9jdXMhD1Nob3dOYXRpdmVJbnB1dCETVHdl'
	..'bnR5T25lQ2hhcmFjdGVycyEMVGV4dEVkaXRhYmxlIQ5UZXh0WEFsaWdubWVudCEJU2VwZXJhdG9yDCUGAT4AAAAAAAAAAAwK16M7AAAAAIA/AAAhATohB01lc3NhZ2UMTDcJPgAAAAAAAAAADM3MTD8AAAAAgD8AACEGU1lTVEVNIQ9TWVNURU0gfCBTZXJ2ZXIG//8A'
	..'BIWQkQoADADDIAPoQABAHMIKAAAAPgAADkEAAAA+BIiQkQoADADDkAE6QQAA/MEKAAAAPgAAAD4AAHRBBIuQkQoALADDIAPoQAAA/MEKAAAAPgAADkEAAHRBBI6QkQoADADDIAPoQACAv8EKADwAw5MBu0BSuwDCCgAAgD8AAAAAAAAAAAoAAAAAAACAPwAAAAAKAACA'
	..'PwAAgCoAAAirCgAA0Cp3N54+bnhzPwoAAIA/AAB8KgAABKsKAACgKv7//z7Xs10/CgAAgD8AAFApAAAwqgoAAOCpPUwrP9o+Pj8KAACAPwAAACgAAECpCgAAAKnGG08/IHkWPwoAAACoId5pP8w/0D4KAAAAAOJnej/O5lQ+CmZl3bMAAAAAAACAvyQBAAEAAgMEAQoA'
	..'BQYHCAkKCwwNDg8QERITEBQVFggEAQoABQYHCAkKCxcNDg8QERgTEBQZFggEAQoABQYHCAkKCxoNDg8bERwTGxQZFggEAQoABQYHCAkKCx0NDg8bER4TGxQVFggEAQoABQYHCAkKCx8NDg8gESETIBQVFggEAQoABQYHCAkKCyINDg8gESMTIBQZFggEAQoABQYHCAkK'
	..'CyQNDg8lESYTJRQVFggEAQoABQYHCAkKCycNDg8lESgTJRQZFggEAQoABQYHCAkKCykNDg8qESsTKhQVFggEAQoABQYHCAkKCywNDg8qES0TKhQZFggEAQoABQYHCAkKCy4NDg8vETATLxQVFggEAQoABQYHCAkKCzENDg8vETITLxQZFggEAQgABQYHCAkKCzMNDhE0'
	..'FBUWCAQBCAAFBgcICQoLNQ0OETYUGRYIBAEIAAUGBwgJCgs3DQ4ROBQ5FggEAQgABQYHCAkKCzoNDhE7FDwWCAQBCAAFBgcICQoLPQ0OET4UPxYIBAENAEBBBQYHCAkKC0JDRA0OD0URRhNFFEcWCEhJShMGAEtJTAZNTk9JUFFSSVMUBQBUBlVWFFdYWVpbXBUBAF1O'
	..'XhQKAEBfVWARYRRiY2RlZmdWaAZpamsGbBMAAG0YBQBAblVvcElxCBRyXhkPAEBzVW9wSXEIFHR1RGNkdkRld2dgeERoBmlqawZ5CF4ZEABAelVvcElxCBF7FHx1RGNkdkRlfWdgeERoBmlqawZ5CF4ZEABAflVvcElxCBF/FIB1RGNkdkRld2dgeERoBmlqawZ5CG0Y'
	..'BQBAgVVgcElxCBRyXh0PAEBzVW9wSXEIFHR1RGNkdkRlgmeDeERoBmlqawZ5CF4dEABAelVvcElxCBF7FHx1RGNkdkRlfWeDeERoBmlqawZ5CF4dEABAflVvcElxCBF/FIB1RGNkdkRld2dgeERoBmlqawZ5CAQBCAAFBgcICQoLhA0OEYUUhhYIBAEIAAUGBwgJCguH'
	..'DQ4RiBSJFggEAQgABQYHCAkKC4oNDhGLFIwWCAQBCAAFBgcICQoLjQ0OEY4UhhYIAA==')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
